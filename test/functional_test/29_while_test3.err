	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/测试/functional_test/29_while_test3.sy"
	.data
	.comm   g, 4, 4
	.comm   h, 4, 4
	.comm   f, 4, 4
	.comm   e, 4, 4
	.text
	.align  2
	.global EightWhile
	.type   EightWhile, %function
EightWhile:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #20
	mov     R9, #5
	str     R9, [FP, #-8]
	mov     R9, #6
	str     R9, [FP, #-12]
	mov     R9, #7
	str     R9, [FP, #-16]
	mov     R9, #10
	str     R9, [FP, #-20]
.L1:
	ldr     R4, [FP, #-8]
	mov     R9, #20
	cmp     R4, R9
	blt     .L23
	b       .L0
.L0:
	ldr     R5, [FP, #-8]
	ldr     R9, [FP, #-12]
	ldr     R4, [FP, #-20]
	add     R9, R9, R4
	add     R4, R5, R9
	ldr     R9, [FP, #-16]
	add     R5, R4, R9
	ldr     R4, =e
	ldr     R9, [R4]
	ldr     R8, [FP, #-20]
	add     R4, R9, R8
	ldr     R9, =g
	ldr     R9, [R9]
	sub     R6, R4, R9
	ldr     R9, =h
	ldr     R4, [R9]
	add     R9, R6, R4
	sub     R9, R5, R9
	mov     R0, R9
	b       .L24
.L23:
	ldr     R9, [FP, #-8]
	add     R9, R9, #3
	str     R9, [FP, #-8]
.L3:
	ldr     R9, [FP, #-12]
	mov     R4, #10
	cmp     R9, R4
	blt     .L22
	b       .L2
.L2:
	ldr     R9, [FP, #-12]
	sub     R9, R9, #2
	str     R9, [FP, #-12]
	b       .L1
.L22:
	ldr     R9, [FP, #-12]
	add     R9, R9, #1
	str     R9, [FP, #-12]
.L5:
	ldr     R9, [FP, #-16]
	mov     R4, #7
	cmp     R9, R4
	beq     .L21
	b       .L4
.L4:
	ldr     R9, [FP, #-16]
	add     R9, R9, #1
	str     R9, [FP, #-16]
	b       .L3
.L21:
	ldr     R9, [FP, #-16]
	sub     R9, R9, #1
	str     R9, [FP, #-16]
.L7:
	ldr     R9, [FP, #-20]
	mov     R4, #20
	cmp     R9, R4
	blt     .L20
	b       .L6
.L6:
	ldr     R9, [FP, #-20]
	sub     R9, R9, #1
	str     R9, [FP, #-20]
	b       .L5
.L20:
	ldr     R9, [FP, #-20]
	add     R9, R9, #3
	str     R9, [FP, #-20]
.L9:
	ldr     R9, =e
	ldr     R4, [R9]
	mov     R9, #1
	cmp     R4, R9
	bgt     .L19
	b       .L8
.L8:
	ldr     R4, =e
	ldr     R9, =e
	ldr     R9, [R9]
	add     R9, R9, #1
	str     R9, [R4]
	b       .L7
.L19:
	ldr     R4, =e
	ldr     R9, =e
	ldr     R9, [R9]
	sub     R9, R9, #1
	str     R9, [R4]
.L11:
	ldr     R9, =f
	ldr     R9, [R9]
	mov     R4, #2
	cmp     R9, R4
	bgt     .L18
	b       .L10
.L10:
	ldr     R9, =f
	ldr     R4, =f
	ldr     R4, [R4]
	add     R4, R4, #1
	str     R4, [R9]
	b       .L9
.L18:
	ldr     R9, =f
	ldr     R4, =f
	ldr     R4, [R4]
	sub     R4, R4, #2
	str     R4, [R9]
.L13:
	ldr     R9, =g
	ldr     R4, [R9]
	mov     R9, #3
	cmp     R4, R9
	blt     .L17
	b       .L12
.L12:
	ldr     R4, =g
	ldr     R9, =g
	ldr     R9, [R9]
	sub     R9, R9, #8
	str     R9, [R4]
	b       .L11
.L17:
	ldr     R4, =g
	ldr     R9, =g
	ldr     R9, [R9]
	add     R9, R9, #10
	str     R9, [R4]
.L15:
	ldr     R9, =h
	ldr     R9, [R9]
	mov     R4, #10
	cmp     R9, R4
	blt     .L16
	b       .L14
.L14:
	ldr     R9, =h
	ldr     R4, =h
	ldr     R4, [R4]
	sub     R4, R4, #1
	str     R4, [R9]
	b       .L13
.L16:
	ldr     R9, =h
	ldr     R4, =h
	ldr     R4, [R4]
	add     R4, R4, #8
	str     R4, [R9]
	b       .L15
.L24:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   EightWhile, .-EightWhile
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #4
	ldr     R4, =g
	mov     R9, #1
	str     R9, [R4]
	ldr     R4, =h
	mov     R9, #2
	str     R9, [R4]
	ldr     R4, =e
	mov     R9, #4
	str     R9, [R4]
	ldr     R4, =f
	mov     R9, #6
	str     R9, [R4]
	bl      EightWhile
# 	mov     R0, R0
	b       .L25
.L25:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
