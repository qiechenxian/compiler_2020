	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/测试/functional_test/57_sort_test5.sy"
	.data
	.comm   n, 4, 4
	.text
	.align  2
	.global swap
	.type   swap, %function
swap:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #8
	add     R5, FP, #4
	ldr     R9, [FP, #8]
	mov     R4, #4
	mul     R9, R9, R4
	add     R9, R5, R9
	ldr     R9, [R9]
	str     R9, [FP, #-8]
	add     R5, FP, #4
	ldr     R9, [FP, #8]
	mov     R4, #4
	mul     R9, R9, R4
	add     R5, R5, R9
	add     R8, FP, #4
	ldr     R4, [FP, #12]
	mov     R9, #4
	mul     R9, R4, R9
	add     R9, R8, R9
# 	ldr      R9, [R9]
	str     R5, [R9]
	add     R9, FP, #4
	ldr     R8, [FP, #12]
	mov     R4, #4
	mul     R4, R8, R4
	add     R8, R9, R4
	add     R9, FP, #-8
# 	ldr      R9, [R9]
	str     R8, [R9]
	mov     R9, #0
	mov     R0, R9
	b       .L18
.L18:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   swap, .-swap
	.align  2
	.global heap_ajust
	.type   heap_ajust, %function
heap_ajust:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #12
	ldr     R9, [FP, #8]
	str     R9, [FP, #-8]
	ldr     R9, [FP, #-8]
	mov     R4, #2
	mul     R9, R9, R4
	add     R9, R9, #1
	str     R9, [FP, #-12]
.L1:
	ldr     R4, [FP, #-12]
	ldr     R5, [FP, #12]
	add     R9, R5, #1
	cmp     R4, R9
	blt     .L8
	b       .L0
.L0:
	mov     R9, #0
	mov     R0, R9
	b       .L19
.L8:
	ldr     R4, [FP, #-12]
	ldr     R9, [FP, #12]
	cmp     R4, R9
	blt     .L3
	b       .L2
.L2:
	add     R9, FP, #4
	ldr     R8, [FP, #-12]
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	ldr     R5, [R9]
	add     R6, FP, #4
	ldr     R9, [FP, #-12]
	add     R9, R9, #1
	mov     R4, #4
	mul     R9, R9, R4
	add     R4, R6, R9
	ldr     R9, [R4]
	cmp     R5, R9
	blt     .L3
	b       .L4
.L4:
	add     R9, FP, #4
	ldr     R8, [FP, #-8]
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	ldr     R5, [R9]
	add     R6, FP, #4
	ldr     R9, [FP, #-12]
	mov     R4, #4
	mul     R9, R9, R4
	add     R4, R6, R9
	ldr     R9, [R4]
	cmp     R5, R9
	bgt     .L5
	b       .L6
.L6:
	add     R8, FP, #-8
# 	mov     R8, R8
	add     R7, FP, #4
	str     R7, [SP]
	ldr     R4, [FP, #-8]
	str     R4, [SP, #4]
	ldr     R9, [FP, #-12]
	str     R9, [SP, #8]
	bl      swap
	mov     R9, R0
	str     R9, [R8]
	ldr     R9, [FP, #-12]
	str     R9, [FP, #-8]
	ldr     R4, [FP, #-8]
	mov     R9, #2
	mul     R9, R4, R9
	add     R9, R9, #1
	str     R9, [FP, #-12]
.L7:
	b       .L1
.L3:
	ldr     R9, [FP, #-12]
	add     R9, R9, #1
	str     R9, [FP, #-12]
	b       .L4
.L5:
	mov     R9, #0
	mov     R0, R9
	b       .L7
.L19:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   heap_ajust, .-heap_ajust
	.align  2
	.global heap_sort
	.type   heap_sort, %function
heap_sort:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #16
	ldr     R9, [FP, #8]
	mov     R4, #2
	mov     R0, R9
	mov     R1, R4
	bl      __aeabi_idiv
	mov     R9, R0
	sub     R9, R9, #1
	str     R9, [FP, #-8]
.L10:
	ldr     R9, [FP, #-8]
	mov     R4, #-1
	cmp     R9, R4
	bgt     .L11
	b       .L9
.L9:
	ldr     R9, [FP, #8]
	sub     R9, R9, #1
	str     R9, [FP, #-8]
.L13:
	ldr     R9, [FP, #-8]
	mov     R4, #0
	cmp     R9, R4
	bgt     .L14
	b       .L12
.L12:
	mov     R9, #0
	mov     R0, R9
	b       .L20
.L11:
	ldr     R9, [FP, #8]
	sub     R9, R9, #1
	str     R9, [FP, #-12]
	add     R8, FP, #-12
# 	mov     R8, R8
	add     R7, FP, #4
	str     R7, [SP]
	ldr     R4, [FP, #-8]
	str     R4, [SP, #4]
	ldr     R9, [FP, #-12]
	str     R9, [SP, #8]
	bl      heap_ajust
	mov     R9, R0
	str     R9, [R8]
	ldr     R9, [FP, #-8]
	sub     R9, R9, #1
	str     R9, [FP, #-8]
	b       .L10
.L14:
	mov     R9, #0
	str     R9, [FP, #-16]
	add     R8, FP, #-12
# 	mov     R8, R8
	add     R7, FP, #4
	str     R7, [SP]
	ldr     R4, [FP, #-16]
	str     R4, [SP, #4]
	ldr     R9, [FP, #-8]
	str     R9, [SP, #8]
	bl      swap
	mov     R9, R0
	str     R9, [R8]
	ldr     R9, [FP, #-8]
	sub     R9, R9, #1
	str     R9, [FP, #-12]
	add     R8, FP, #-12
# 	mov     R8, R8
	add     R7, FP, #4
	str     R7, [SP]
	ldr     R4, [FP, #-16]
	str     R4, [SP, #4]
	ldr     R9, [FP, #-12]
	str     R9, [SP, #8]
	bl      heap_ajust
	mov     R9, R0
	str     R9, [R8]
	ldr     R9, [FP, #-8]
	sub     R9, R9, #1
	str     R9, [FP, #-8]
	b       .L13
.L20:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   heap_sort, .-heap_sort
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #56
	ldr     R4, =n
	mov     R9, #10
	str     R9, [R4]
	add     R9, FP, #-44
	mov     R8, #0
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	mov     R4, #4
	str     R4, [R9]
	add     R9, FP, #-44
	mov     R4, #1
	mov     R8, #4
	mul     R4, R4, R8
	add     R4, R9, R4
	mov     R9, #3
	str     R9, [R4]
	add     R9, FP, #-44
	mov     R8, #2
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	mov     R4, #9
	str     R4, [R9]
	add     R9, FP, #-44
	mov     R4, #3
	mov     R8, #4
	mul     R4, R4, R8
	add     R4, R9, R4
	mov     R9, #2
	str     R9, [R4]
	add     R9, FP, #-44
	mov     R8, #4
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	mov     R4, #0
	str     R4, [R9]
	add     R9, FP, #-44
	mov     R4, #5
	mov     R8, #4
	mul     R4, R4, R8
	add     R4, R9, R4
	mov     R9, #1
	str     R9, [R4]
	add     R9, FP, #-44
	mov     R8, #6
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	mov     R4, #6
	str     R4, [R9]
	add     R9, FP, #-44
	mov     R4, #7
	mov     R8, #4
	mul     R4, R4, R8
	add     R4, R9, R4
	mov     R9, #5
	str     R9, [R4]
	add     R9, FP, #-44
	mov     R8, #8
	mov     R4, #4
	mul     R4, R8, R4
	add     R9, R9, R4
	mov     R4, #7
	str     R4, [R9]
	add     R9, FP, #-44
	mov     R4, #9
	mov     R8, #4
	mul     R4, R4, R8
	add     R4, R9, R4
	mov     R9, #8
	str     R9, [R4]
	mov     R9, #0
	str     R9, [FP, #-48]
	add     R4, FP, #-48
# 	mov     R4, R4
	add     R8, FP, #-44
	str     R8, [SP]
	ldr     R5, =n
	ldr     R5, [R5]
	str     R5, [SP, #4]
	bl      heap_sort
	mov     R9, R0
	str     R9, [R4]
.L16:
	ldr     R9, [FP, #-48]
	ldr     R4, =n
	ldr     R4, [R4]
	cmp     R9, R4
	blt     .L17
	b       .L15
.L15:
	mov     R9, #0
	mov     R0, R9
	b       .L21
.L17:
	add     R5, FP, #-44
	ldr     R9, [FP, #-48]
	mov     R4, #4
	mul     R9, R9, R4
	add     R9, R5, R9
	ldr     R9, [R9]
	str     R9, [FP, #-52]
	ldr     R9, [FP, #-52]
	str     r0, [SP, #0]
	ldr     r0, [R9]
	bl      putint
	ldr     r0, [SP, #0]
	ldr     r1, [SP, #-4]
	ldr     r2, [SP, #-8]
	ldr     r3, [SP, #-12]
	mov     R9, #10
	str     R9, [FP, #-52]
	ldr     R9, [FP, #-52]
	str     r0, [SP, #0]
	ldr     r0, [R9]
	bl      putch
	ldr     r0, [SP, #0]
	ldr     r1, [SP, #-4]
	ldr     r2, [SP, #-8]
	ldr     r3, [SP, #-12]
	ldr     R9, [FP, #-48]
	add     R9, R9, #1
	str     R9, [FP, #-48]
	b       .L16
.L21:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
