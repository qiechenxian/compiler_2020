	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/32_while_if_test3.sy"
	.data
	.text
	.align  2
	.global deepWhileBr
	.type   deepWhileBr, %function
deepWhileBr:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #16
	ldr     R0, [FP, #4]
	ldr     R10, [FP, #8]
	add     R10, R0, R10
	str     R10, [FP, #-8]
.L1:
	ldr     R10, [FP, #-8]
	mov     R0, #75
	cmp     R10, R0
	blt     .L8
	b       .L0
.L0:
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L9
.L8:
	mov     R10, #42
	str     R10, [FP, #-12]
	ldr     R0, [FP, #-8]
	mov     R10, #100
	cmp     R0, R10
	blt     .L6
	b       .L7
.L7:
	b       .L1
.L6:
	ldr     R0, [FP, #-8]
	ldr     R10, [FP, #-12]
	add     R10, R0, R10
	str     R10, [FP, #-8]
	ldr     R10, [FP, #-8]
	mov     R0, #99
	cmp     R10, R0
	bgt     .L4
	b       .L5
.L5:
	b       .L7
.L4:
	ldr     R10, [FP, #-12]
	mov     R0, #2
	mul     R10, R10, R0
	str     R10, [FP, #-16]
	mov     R0, #1
	mov     R10, #0
	cmp     R0, R10
	bne     .L2
	b       .L3
.L3:
	b       .L5
.L2:
	ldr     R0, [FP, #-16]
	mov     R10, #2
	mul     R10, R0, R10
	str     R10, [FP, #-8]
	b       .L3
.L9:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   deepWhileBr, .-deepWhileBr
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #8
	mov     R1, #2
	str     R1, [FP, #-8]
	ldr     R1, [FP, #-8]
	str     R1, [SP]
	ldr     R10, [FP, #-8]
	str     R10, [SP, #4]
	bl      deepWhileBr
# 	mov     R0, R0
	b       .L10
.L10:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
