	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/61_rec_fibonacci.sy"
	.data
	.comm   n, 4, 4
	.text
	.align  2
	.global f
	.type   f, %function
f:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #16
	ldr     R10, [FP, #4]
	mov     R1, #1
	cmp     R10, R1
	beq     .L0
	b       .L1
.L1:
	ldr     R10, [FP, #4]
	mov     R1, #2
	cmp     R10, R1
	beq     .L2
	b       .L3
.L3:
	ldr     R1, [FP, #4]
	sub     R1, R1, #1
	str     R1, [FP, #-8]
	ldr     R1, [FP, #4]
	sub     R1, R1, #2
	str     R1, [FP, #-12]
	add     R1, FP, #-16
# 	mov     R1, R1
	ldr     R2, [FP, #-8]
	str     R2, [SP]
	bl      f
	mov     R2, R0
# 	mov     R2, R2
	ldr     R3, [FP, #-12]
	str     R3, [SP]
	bl      f
	mov     R10, R0
	add     R10, R2, R10
	str     R10, [R1]
	ldr     R10, [FP, #-16]
	mov     R0, R10
	b       .L4
.L0:
	mov     R10, #1
	mov     R0, R10
	b       .L1
.L2:
	mov     R10, #1
	mov     R0, R10
	b       .L3
.L4:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   f, .-f
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #20
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R1, R0
	ldr     R10, =n
	str     R1, [R10]
	add     R1, FP, #-8
# 	mov     R1, R1
	ldr     R2, =n
	ldr     R2, [R2]
	str     R2, [SP]
	bl      f
	mov     R10, R0
	str     R10, [R1]
	ldr     R10, [FP, #-8]
	str     r0, [SP, #0]
	ldr     r0, [R10]
	bl      putint
	ldr     r0, [SP, #0]
	ldr     r1, [SP, #-4]
	ldr     r2, [SP, #-8]
	ldr     r3, [SP, #-12]
	mov     R10, #10
	str     R10, [FP, #-16]
	ldr     R10, [FP, #-16]
	str     r0, [SP, #0]
	ldr     r0, [R10]
	bl      putch
	ldr     r0, [SP, #0]
	ldr     r1, [SP, #-4]
	ldr     r2, [SP, #-8]
	ldr     r3, [SP, #-12]
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L5
.L5:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
