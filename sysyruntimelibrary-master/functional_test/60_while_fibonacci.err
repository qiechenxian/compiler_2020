	.arch   armv7
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/60_while_fibonacci.sy"
	.data
	.comm   n, 4, 4
	.text
	.align  2
	.global fib
	.type   fib, %function
fib:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #12
	mov     102, #0
	str     102, [FP, #-8]
	mov     103, #1
	str     103, [FP, #-12]
	ldr     104, [FP, #4]
	mov     105, #0
	cmp     104, 105
	beq     .L0
	b       .L1
.L1:
	ldr     106, [FP, #4]
	mov     107, #1
	cmp     106, 107
	beq     .L2
	b       .L3
.L3:
.L5:
	ldr     108, [FP, #4]
	mov     109, #1
	cmp     108, 109
	bgt     .L6
	b       .L4
.L4:
	ldr     110, [FP, #-16]
	mov     RV, 110
	b       .L7
.L0:
	mov     111, #0
	mov     RV, 111
	b       .L1
.L2:
	mov     112, #1
	mov     RV, 112
	b       .L3
.L6:
	ldr     114, [FP, #-8]
	ldr     115, [FP, #-12]
	add     113, 114, 115
	str     113, [FP, #-16]
	ldr     116, [FP, #-12]
	str     116, [FP, #-8]
	ldr     117, [FP, #-16]
	str     117, [FP, #-12]
	ldr     119, [FP, #4]
	sub     118, 119, #1
	str     118, [FP, #4]
	b       .L5
.L7:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   fib, .-fib

	.align  2
	.global main
	.type   main, %function
main:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #4
	bl      getint
	mov     122, RV
	ldr     124, =n
	str     122, [124]
	add     125, FP, #-8
	mov     121, 125
	ldr     127, =n
	ldr     126, [127]
	str     126, [SP]
	bl      fib
	mov     120, RV
	str     120, [121]
	ldr     128, [FP, #-8]
	mov     RV, 128
	b       .L9
.L9:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   main, .-main

