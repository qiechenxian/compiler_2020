
before semantic ast:
 decList(
  variableDec(n,
   int,
   FALSE),
  decList(
   functionDec(fib,
    fieldList(
     field(p,
      int,
      expList(),
      FALSE,
     fieldList()),
    int,
    blockStm(
     comStmList(
      comStm(
       decList(
        variableDec(a,
         int,
         FALSE),
        decList()),),
      comStmList(
       comStm(
        decList(
         variableDec(b,
          int,
          FALSE),
         decList()),),
       comStmList(
        comStm(
         decList(
          variableDec(c,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(a),
           intExp(0))),
         comStmList(
          comStm(
           assignStm(
            simpleVar(b),
            intExp(1))),
          comStmList(
           comStm(
            ifStm(
             opExp(
              eq,
              varExp(
               simpleVar(p)),
              intExp(0)),
             blockStm(
              comStmList(
               comStm(
                returnStm(
                 intExp(0))),
               comStmList()))             )),
           comStmList(
            comStm(
             ifStm(
              opExp(
               eq,
               varExp(
                simpleVar(p)),
               intExp(1)),
              blockStm(
               comStmList(
                comStm(
                 returnStm(
                  intExp(1))),
                comStmList()))              )),
            comStmList(
             comStm(
              whileStm(
               opExp(
                gt,
                varExp(
                 simpleVar(p)),
                intExp(1)),
               blockStm(
                comStmList(
                 comStm(
                  assignStm(
                   simpleVar(c),
                   opExp(
                    add,
                    varExp(
                     simpleVar(a)),
                    varExp(
                     simpleVar(b))))),
                 comStmList(
                  comStm(
                   assignStm(
                    simpleVar(a),
                    varExp(
                     simpleVar(b)))),
                  comStmList(
                   comStm(
                    assignStm(
                     simpleVar(b),
                     varExp(
                      simpleVar(c)))),
                   comStmList(
                    comStm(
                     assignStm(
                      simpleVar(p),
                      opExp(
                       sub,
                       varExp(
                        simpleVar(p)),
                       intExp(1)))),
                    comStmList()))))))
),
             comStmList(
              comStm(
               returnStm(
                varExp(
                 simpleVar(c)))),
              comStmList()))))))))))),
   decList(
    functionDec(main,
     fieldList(),
     int,
     blockStm(
      comStmList(
       comStm(
        assignStm(
         simpleVar(n),
         callExp(getint,
          expList()))),
       comStmList(
        comStm(
         decList(
          variableDec(res,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(res),
           callExp(fib,
            expList(
             varExp(
              simpleVar(n)),
             expList())))),
         comStmList(
          comStm(
           returnStm(
            varExp(
             simpleVar(res)))),
          comStmList())))))),
    decList())))

after semantic ast:
 decList(
  variableDec(n,
   int,
   FALSE),
  decList(
   functionDec(fib,
    fieldList(
     field(p,
      int,
      expList(),
      FALSE,
     fieldList()),
    int,
    blockStm(
     comStmList(
      comStm(
       decList(
        variableDec(a,
         int,
         FALSE),
        decList()),),
      comStmList(
       comStm(
        decList(
         variableDec(b,
          int,
          FALSE),
         decList()),),
       comStmList(
        comStm(
         decList(
          variableDec(c,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(a),
           intExp(0))),
         comStmList(
          comStm(
           assignStm(
            simpleVar(b),
            intExp(1))),
          comStmList(
           comStm(
            ifStm(
             opExp(
              eq,
              varExp(
               simpleVar(p)),
              intExp(0)),
             blockStm(
              comStmList(
               comStm(
                returnStm(
                 intExp(0))),
               comStmList()))             )),
           comStmList(
            comStm(
             ifStm(
              opExp(
               eq,
               varExp(
                simpleVar(p)),
               intExp(1)),
              blockStm(
               comStmList(
                comStm(
                 returnStm(
                  intExp(1))),
                comStmList()))              )),
            comStmList(
             comStm(
              whileStm(
               opExp(
                gt,
                varExp(
                 simpleVar(p)),
                intExp(1)),
               blockStm(
                comStmList(
                 comStm(
                  assignStm(
                   simpleVar(c),
                   opExp(
                    add,
                    varExp(
                     simpleVar(a)),
                    varExp(
                     simpleVar(b))))),
                 comStmList(
                  comStm(
                   assignStm(
                    simpleVar(a),
                    varExp(
                     simpleVar(b)))),
                  comStmList(
                   comStm(
                    assignStm(
                     simpleVar(b),
                     varExp(
                      simpleVar(c)))),
                   comStmList(
                    comStm(
                     assignStm(
                      simpleVar(p),
                      opExp(
                       sub,
                       varExp(
                        simpleVar(p)),
                       intExp(1)))),
                    comStmList()))))))
),
             comStmList(
              comStm(
               returnStm(
                varExp(
                 simpleVar(c)))),
              comStmList()))))))))))),
   decList(
    functionDec(main,
     fieldList(),
     int,
     blockStm(
      comStmList(
       comStm(
        assignStm(
         simpleVar(n),
         callExp(getint,
          expList()))),
       comStmList(
        comStm(
         decList(
          variableDec(res,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(res),
           callExp(fib,
            expList(
             varExp(
              simpleVar(n)),
             expList())))),
         comStmList(
          comStm(
           returnStm(
            varExp(
             simpleVar(res)))),
          comStmList())))))),
    decList())))
semantic check finish !

↓---------------IR TREE BEFORE CANNO PRINTF START---------------↓
 SEQ(
  LABEL L10,
  SEQ(
   SEQ(
    SEQ(
     MOVE(
      NAME n,
      CALL(
       NAME getint,
        TEMP tFP)),
     EXP(
      CONST 0)),
    MOVE(
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST -4)),
     CALL(
      NAME L0,
       TEMP tFP,
       NAME n))),
   MOVE(
    TEMP tRV,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -4))))) SEQ(
  LABEL L0,
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         SEQ(
          EXP(
           CONST 0),
          EXP(
           CONST 0)),
         EXP(
          CONST 0)),
        MOVE(
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST -4)),
         CONST 0)),
       MOVE(
        MEM(
         BINOP(T_add,
          TEMP tFP,
          CONST -8)),
        CONST 1)),
      SEQ(
       SEQ(
        CJUMP(T_eq,
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST 4)),
         CONST 0,
         L1,L2),
        SEQ(
         LABEL L1,
         MOVE(
          TEMP tRV,
          CONST 0))),
       LABEL L2)),
     SEQ(
      SEQ(
       CJUMP(T_eq,
        MEM(
         BINOP(T_add,
          TEMP tFP,
          CONST 4)),
        CONST 1,
        L3,L4),
       SEQ(
        LABEL L3,
        MOVE(
         TEMP tRV,
         CONST 1))),
      LABEL L4)),
    SEQ(
     LABEL L6,
     SEQ(
      CJUMP(T_gt,
       MEM(
        BINOP(T_add,
         TEMP tFP,
         CONST 4)),
       CONST 1,
       L9,L5),
      SEQ(
       LABEL L9,
       SEQ(
        SEQ(
         SEQ(
          SEQ(
           MOVE(
            MEM(
             BINOP(T_add,
              TEMP tFP,
              CONST -12)),
            BINOP(T_add,
             MEM(
              BINOP(T_add,
               TEMP tFP,
               CONST -4)),
             MEM(
              BINOP(T_add,
               TEMP tFP,
               CONST -8)))),
           MOVE(
            MEM(
             BINOP(T_add,
              TEMP tFP,
              CONST -4)),
            MEM(
             BINOP(T_add,
              TEMP tFP,
              CONST -8)))),
          MOVE(
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -8)),
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -12)))),
         MOVE(
          MEM(
           BINOP(T_add,
            TEMP tFP,
            CONST 4)),
          BINOP(T_sub,
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST 4)),
           CONST 1))),
        SEQ(
         JUMP(
          NAME L6),
         LABEL L5)))))),
   MOVE(
    TEMP tRV,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -12)))))
↑---------------IR TREE BEFORE CANNO PRINTF OVER---------------↑

↓---------------IR TREE AFTER CANNO PRINTF START---------------↓
 LABEL L10
----dived line----
 MOVE(
  NAME n,
  CALL(
   NAME getint,
    TEMP tFP))
----dived line----
 MOVE(
  TEMP t103,
  BINOP(T_add,
   TEMP tFP,
   CONST -4))
----dived line----
 MOVE(
  TEMP t102,
  CALL(
   NAME L0,
    TEMP tFP,
    NAME n))
----dived line----
 MOVE(
  MEM(
   TEMP t103),
  TEMP t102)
----dived line----
 MOVE(
  TEMP tRV,
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -4)))
----dived line----
 JUMP(
  NAME L11)
----dived line----
 LABEL L11
----dived line----

↑---------------IR TREE AFTER CANNO PRINTF OVER---------------↑
compiler_dev_cpp: /mnt/e/compiler/compiler-dev-cpp-new/codegen.cpp:293: void munchStm(T_stm): Assertion `0' failed.
Aborted
