	.arch   armv7
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/62_long_code.sy"
	.data
	.comm   n, 4, 4
	.text
	.align  2
	.global bubblesort
	.type   bubblesort, %function
bubblesort:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #12
	mov     109, #0
	str     109, [FP, #-8]
.L1:
	ldr     110, [FP, #-8]
	ldr     113, =n
	ldr     112, [113]
	sub     111, 112, #1
	cmp     110, 111
	blt     .L7
	b       .L0
.L0:
	mov     114, #0
	mov     RV, 114
	b       .L88
.L7:
	mov     115, #0
	str     115, [FP, #-12]
.L3:
	ldr     116, [FP, #-12]
	ldr     120, =n
	ldr     119, [120]
	ldr     121, [FP, #-8]
	sub     118, 119, 121
	sub     117, 118, #1
	cmp     116, 117
	blt     .L6
	b       .L2
.L2:
	ldr     123, [FP, #-8]
	add     122, 123, #1
	str     122, [FP, #-8]
	b       .L1
.L6:
	add     126, FP, #4
	ldr     128, [FP, #-12]
	mov     129, #4
	mul     127, 128, 129
	add     125, 126, 127
	ldr     124, [125]
	add     132, FP, #4
	ldr     135, [FP, #-12]
	add     134, 135, #1
	mov     136, #4
	mul     133, 134, 136
	add     131, 132, 133
	ldr     130, [131]
	cmp     124, 130
	bgt     .L4
	b       .L5
.L5:
	ldr     138, [FP, #-12]
	add     137, 138, #1
	str     137, [FP, #-12]
	b       .L3
.L4:
	add     141, FP, #4
	ldr     144, [FP, #-12]
	add     143, 144, #1
	mov     145, #4
	mul     142, 143, 145
	add     140, 141, 142
	ldr     139, [140]
	str     139, [FP, #-16]
	add     148, FP, #4
	ldr     151, [FP, #-12]
	add     150, 151, #1
	mov     152, #4
	mul     149, 150, 152
	add     147, 148, 149
	add     154, FP, #4
	ldr     156, [FP, #-12]
	mov     157, #4
	mul     155, 156, 157
	add     153, 154, 155
	ldr      146, [153]
	str     146, [147]
	add     160, FP, #4
	ldr     162, [FP, #-12]
	mov     163, #4
	mul     161, 162, 163
	add     159, 160, 161
	add     164, FP, #-16
	ldr      158, [164]
	str     158, [159]
	b       .L5
.L88:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   bubblesort, .-bubblesort

	.align  2
	.global insertsort
	.type   insertsort, %function
insertsort:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #12
	mov     165, #1
	str     165, [FP, #-8]
.L9:
	ldr     166, [FP, #-8]
	ldr     168, =n
	ldr     167, [168]
	cmp     166, 167
	blt     .L14
	b       .L8
.L8:
	mov     169, #0
	mov     RV, 169
	b       .L90
.L14:
	add     172, FP, #4
	ldr     174, [FP, #-8]
	mov     175, #4
	mul     173, 174, 175
	add     171, 172, 173
	ldr     170, [171]
	str     170, [FP, #-12]
	ldr     177, [FP, #-8]
	sub     176, 177, #1
	str     176, [FP, #-16]
.L12:
	ldr     178, [FP, #-16]
	mov     179, #-1
	cmp     178, 179
	bgt     .L13
	b       .L10
.L10:
	ldr     180, [FP, #-12]
	add     183, FP, #4
	ldr     185, [FP, #-16]
	mov     186, #4
	mul     184, 185, 186
	add     182, 183, 184
	ldr     181, [182]
	cmp     180, 181
	blt     .L13
	b       .L11
.L11:
	add     189, FP, #4
	ldr     192, [FP, #-16]
	add     191, 192, #1
	mov     193, #4
	mul     190, 191, 193
	add     188, 189, 190
	add     194, FP, #-12
	ldr      187, [194]
	str     187, [188]
	ldr     196, [FP, #-8]
	add     195, 196, #1
	str     195, [FP, #-8]
	b       .L9
.L13:
	add     199, FP, #4
	ldr     202, [FP, #-16]
	add     201, 202, #1
	mov     203, #4
	mul     200, 201, 203
	add     198, 199, 200
	add     205, FP, #4
	ldr     207, [FP, #-16]
	mov     208, #4
	mul     206, 207, 208
	add     204, 205, 206
	ldr      197, [204]
	str     197, [198]
	ldr     210, [FP, #-16]
	sub     209, 210, #1
	str     209, [FP, #-16]
	b       .L12
.L90:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   insertsort, .-insertsort

	.align  2
	.global QuickSort
	.type   QuickSort, %function
QuickSort:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #16
	ldr     215, [FP, #8]
	ldr     216, [FP, #12]
	cmp     215, 216
	blt     .L30
	b       .L31
.L31:
	mov     217, #0
	mov     RV, 217
	b       .L92
.L30:
	ldr     218, [FP, #8]
	str     218, [FP, #-8]
	ldr     219, [FP, #12]
	str     219, [FP, #-12]
	add     222, FP, #4
	ldr     224, [FP, #8]
	mov     225, #4
	mul     223, 224, 225
	add     221, 222, 223
	ldr     220, [221]
	str     220, [FP, #-16]
.L16:
	ldr     226, [FP, #-8]
	ldr     227, [FP, #-12]
	cmp     226, 227
	blt     .L29
	b       .L15
.L15:
	add     230, FP, #4
	ldr     232, [FP, #-8]
	mov     233, #4
	mul     231, 232, 233
	add     229, 230, 231
	add     234, FP, #-16
	ldr      228, [234]
	str     228, [229]
	ldr     236, [FP, #-8]
	sub     235, 236, #1
	str     235, [FP, #-20]
	add     237, FP, #-20
	mov     214, 237
	add     238, FP, #4
	str     238, [SP]
	ldr     239, [FP, #8]
	str     239, [SP, #4]
	ldr     240, [FP, #-20]
	str     240, [SP, #8]
	bl      QuickSort
	mov     213, RV
	str     213, [214]
	ldr     243, [FP, #-8]
	add     242, 243, #1
	str     242, [FP, #-20]
	add     244, FP, #-20
	mov     212, 244
	add     245, FP, #4
	str     245, [SP]
	ldr     246, [FP, #-20]
	str     246, [SP, #4]
	ldr     247, [FP, #12]
	str     247, [SP, #8]
	bl      QuickSort
	mov     211, RV
	str     211, [212]
	b       .L31
.L29:
.L19:
	ldr     248, [FP, #-8]
	ldr     249, [FP, #-12]
	cmp     248, 249
	blt     .L20
	b       .L17
.L17:
	add     252, FP, #4
	ldr     254, [FP, #-12]
	mov     255, #4
	mul     253, 254, 255
	add     251, 252, 253
	ldr     250, [251]
	ldr     257, [FP, #-16]
	sub     256, 257, #1
	cmp     250, 256
	bgt     .L20
	b       .L18
.L18:
	ldr     258, [FP, #-8]
	ldr     259, [FP, #-12]
	cmp     258, 259
	blt     .L21
	b       .L22
.L22:
.L25:
	ldr     260, [FP, #-8]
	ldr     261, [FP, #-12]
	cmp     260, 261
	blt     .L26
	b       .L23
.L23:
	add     264, FP, #4
	ldr     266, [FP, #-8]
	mov     267, #4
	mul     265, 266, 267
	add     263, 264, 265
	ldr     262, [263]
	ldr     268, [FP, #-16]
	cmp     262, 268
	blt     .L26
	b       .L24
.L24:
	ldr     269, [FP, #-8]
	ldr     270, [FP, #-12]
	cmp     269, 270
	blt     .L27
	b       .L28
.L28:
	b       .L16
.L20:
	ldr     272, [FP, #-12]
	sub     271, 272, #1
	str     271, [FP, #-12]
	b       .L19
.L21:
	add     275, FP, #4
	ldr     277, [FP, #-8]
	mov     278, #4
	mul     276, 277, 278
	add     274, 275, 276
	add     280, FP, #4
	ldr     282, [FP, #-12]
	mov     283, #4
	mul     281, 282, 283
	add     279, 280, 281
	ldr      273, [279]
	str     273, [274]
	ldr     285, [FP, #-8]
	add     284, 285, #1
	str     284, [FP, #-8]
	b       .L22
.L26:
	ldr     287, [FP, #-8]
	add     286, 287, #1
	str     286, [FP, #-8]
	b       .L25
.L27:
	add     290, FP, #4
	ldr     292, [FP, #-12]
	mov     293, #4
	mul     291, 292, 293
	add     289, 290, 291
	add     295, FP, #4
	ldr     297, [FP, #-8]
	mov     298, #4
	mul     296, 297, 298
	add     294, 295, 296
	ldr      288, [294]
	str     288, [289]
	ldr     300, [FP, #-12]
	sub     299, 300, #1
	str     299, [FP, #-12]
	b       .L28
.L92:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   QuickSort, .-QuickSort

	.align  2
	.global getMid
	.type   getMid, %function
getMid:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #4
	ldr     303, =n
	ldr     302, [303]
	mov     304, #2
	stmfd   sp!, {r0-r7}
	mov     r0, 302
	mov     r1, 304
	bl      __modsi3
	mov     301, r0
	ldmfd   sp!,{r0-r7}
	mov     305, #0
	cmp     301, 305
	beq     .L32
	b       .L33
.L33:
	ldr     308, =n
	ldr     307, [308]
	mov     309, #2
	stmfd   sp!, {r0-r7}
	mov     r0, 307
	mov     r1, 309
	bl      __divsi3
	mov     306, r0
	ldmfd   sp!,{r0-r7}
	str     306, [FP, #-8]
	add     312, FP, #4
	ldr     314, [FP, #-8]
	mov     315, #4
	mul     313, 314, 315
	add     311, 312, 313
	ldr     310, [311]
	mov     RV, 310
.L34:
	b       .L94
.L32:
	ldr     318, =n
	ldr     317, [318]
	mov     319, #2
	stmfd   sp!, {r0-r7}
	mov     r0, 317
	mov     r1, 319
	bl      __divsi3
	mov     316, r0
	ldmfd   sp!,{r0-r7}
	str     316, [FP, #-8]
	add     324, FP, #4
	ldr     326, [FP, #-8]
	mov     327, #4
	mul     325, 326, 327
	add     323, 324, 325
	ldr     322, [323]
	add     330, FP, #4
	ldr     333, [FP, #-8]
	sub     332, 333, #1
	mov     334, #4
	mul     331, 332, 334
	add     329, 330, 331
	ldr     328, [329]
	add     321, 322, 328
	mov     335, #2
	stmfd   sp!, {r0-r7}
	mov     r0, 321
	mov     r1, 335
	bl      __divsi3
	mov     320, r0
	ldmfd   sp!,{r0-r7}
	mov     RV, 320
	b       .L34
.L94:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   getMid, .-getMid

	.align  2
	.global getMost
	.type   getMost, %function
getMost:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #4016
	mov     336, #0
	str     336, [FP, #-4008]
.L36:
	ldr     337, [FP, #-4008]
	mov     338, #1000
	cmp     337, 338
	blt     .L37
	b       .L35
.L35:
	mov     339, #0
	str     339, [FP, #-4008]
	mov     340, #0
	str     340, [FP, #-4012]
.L39:
	ldr     341, [FP, #-4008]
	ldr     343, =n
	ldr     342, [343]
	cmp     341, 342
	blt     .L42
	b       .L38
.L38:
	ldr     344, [FP, #-4016]
	mov     RV, 344
	b       .L96
.L37:
	add     346, FP, #-4004
	ldr     348, [FP, #-4008]
	mov     349, #4
	mul     347, 348, 349
	add     345, 346, 347
	mov     350, #0
	str     350, [345]
	ldr     352, [FP, #-4008]
	add     351, 352, #1
	str     351, [FP, #-4008]
	b       .L36
.L42:
	add     355, FP, #4
	ldr     357, [FP, #-4008]
	mov     358, #4
	mul     356, 357, 358
	add     354, 355, 356
	ldr     353, [354]
	str     353, [FP, #-4020]
	add     360, FP, #-4004
	ldr     362, [FP, #-4020]
	mov     363, #4
	mul     361, 362, 363
	add     359, 360, 361
	add     367, FP, #-4004
	ldr     369, [FP, #-4020]
	mov     370, #4
	mul     368, 369, 370
	add     366, 367, 368
	ldr     365, [366]
	add     364, 365, #1
	str     364, [359]
	add     373, FP, #-4004
	ldr     375, [FP, #-4020]
	mov     376, #4
	mul     374, 375, 376
	add     372, 373, 374
	ldr     371, [372]
	ldr     377, [FP, #-4012]
	cmp     371, 377
	bgt     .L40
	b       .L41
.L41:
	ldr     379, [FP, #-4008]
	add     378, 379, #1
	str     378, [FP, #-4008]
	b       .L39
.L40:
	add     382, FP, #-4004
	ldr     384, [FP, #-4020]
	mov     385, #4
	mul     383, 384, 385
	add     381, 382, 383
	ldr     380, [381]
	str     380, [FP, #-4012]
	ldr     386, [FP, #-4020]
	str     386, [FP, #-4016]
	b       .L41
.L96:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   getMost, .-getMost

	.align  2
	.global revert
	.type   revert, %function
revert:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #12
	mov     387, #0
	str     387, [FP, #-12]
	mov     388, #0
	str     388, [FP, #-16]
.L44:
	ldr     389, [FP, #-12]
	ldr     390, [FP, #-16]
	cmp     389, 390
	blt     .L45
	b       .L43
.L43:
	mov     391, #0
	mov     RV, 391
	b       .L98
.L45:
	add     394, FP, #4
	ldr     396, [FP, #-12]
	mov     397, #4
	mul     395, 396, 397
	add     393, 394, 395
	ldr     392, [393]
	str     392, [FP, #-8]
	add     400, FP, #4
	ldr     402, [FP, #-12]
	mov     403, #4
	mul     401, 402, 403
	add     399, 400, 401
	add     405, FP, #4
	ldr     407, [FP, #-16]
	mov     408, #4
	mul     406, 407, 408
	add     404, 405, 406
	ldr      398, [404]
	str     398, [399]
	add     411, FP, #4
	ldr     413, [FP, #-16]
	mov     414, #4
	mul     412, 413, 414
	add     410, 411, 412
	add     415, FP, #-8
	ldr      409, [415]
	str     409, [410]
	ldr     417, [FP, #-12]
	add     416, 417, #1
	str     416, [FP, #-12]
	ldr     419, [FP, #-16]
	sub     418, 419, #1
	str     418, [FP, #-16]
	b       .L44
.L98:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   revert, .-revert

	.align  2
	.global arrCopy
	.type   arrCopy, %function
arrCopy:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #4
	mov     420, #0
	str     420, [FP, #-8]
.L47:
	ldr     421, [FP, #-8]
	ldr     423, =n
	ldr     422, [423]
	cmp     421, 422
	blt     .L48
	b       .L46
.L46:
	mov     424, #0
	mov     RV, 424
	b       .L100
.L48:
	add     427, FP, #8
	ldr     429, [FP, #-8]
	mov     430, #4
	mul     428, 429, 430
	add     426, 427, 428
	add     432, FP, #4
	ldr     434, [FP, #-8]
	mov     435, #4
	mul     433, 434, 435
	add     431, 432, 433
	ldr      425, [431]
	str     425, [426]
	ldr     437, [FP, #-8]
	add     436, 437, #1
	str     436, [FP, #-8]
	b       .L47
.L100:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   arrCopy, .-arrCopy

	.align  2
	.global calSum
	.type   calSum, %function
calSum:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #8
	mov     438, #0
	str     438, [FP, #-8]
	mov     439, #0
	str     439, [FP, #-12]
.L50:
	ldr     440, [FP, #-12]
	ldr     442, =n
	ldr     441, [442]
	cmp     440, 441
	blt     .L54
	b       .L49
.L49:
	mov     443, #0
	mov     RV, 443
	b       .L102
.L54:
	ldr     445, [FP, #-8]
	add     448, FP, #4
	ldr     450, [FP, #-12]
	mov     451, #4
	mul     449, 450, 451
	add     447, 448, 449
	ldr     446, [447]
	add     444, 445, 446
	str     444, [FP, #-8]
	ldr     453, [FP, #-12]
	ldr     454, [FP, #8]
	stmfd   sp!, {r0-r7}
	mov     r0, 453
	mov     r1, 454
	bl      __modsi3
	mov     452, r0
	ldmfd   sp!,{r0-r7}
	ldr     456, [FP, #8]
	sub     455, 456, #1
	cmp     452, 455
	bne     .L51
	b       .L52
.L52:
	add     459, FP, #4
	ldr     461, [FP, #-12]
	mov     462, #4
	mul     460, 461, 462
	add     458, 459, 460
	add     463, FP, #-8
	ldr      457, [463]
	str     457, [458]
	mov     464, #0
	str     464, [FP, #-8]
.L53:
	ldr     466, [FP, #-12]
	add     465, 466, #1
	str     465, [FP, #-12]
	b       .L50
.L51:
	add     468, FP, #4
	ldr     470, [FP, #-12]
	mov     471, #4
	mul     469, 470, 471
	add     467, 468, 469
	mov     472, #0
	str     472, [467]
	b       .L53
.L102:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   calSum, .-calSum

	.align  2
	.global avgPooling
	.type   avgPooling, %function
avgPooling:
	str     fp, [sp, #-4]!
	add     fp, sp, #0
	sub     sp, sp, #12
	mov     473, #0
	str     473, [FP, #-12]
	mov     474, #0
	str     474, [FP, #-8]
.L56:
	ldr     475, [FP, #-12]
	ldr     477, =n
	ldr     476, [477]
	cmp     475, 476
	blt     .L63
	b       .L55
.L55:
	ldr     481, =n
	ldr     480, [481]
	ldr     482, [FP, #8]
	sub     479, 480, 482
	add     478, 479, #1
	str     478, [FP, #-12]
.L65:
	ldr     483, [FP, #-12]
	ldr     485, =n
	ldr     484, [485]
	cmp     483, 484
	blt     .L66
	b       .L64
.L64:
	mov     486, #0
	mov     RV, 486
	b       .L104
.L63:
	ldr     487, [FP, #-12]
	ldr     489, [FP, #8]
	sub     488, 489, #1
	cmp     487, 488
	blt     .L60
	b       .L61
.L61:
	ldr     490, [FP, #-12]
	ldr     492, [FP, #8]
	sub     491, 492, #1
	cmp     490, 491
	beq     .L57
	b       .L58
.L58:
	ldr     495, [FP, #-8]
	add     498, FP, #4
	ldr     500, [FP, #-12]
	mov     501, #4
	mul     499, 500, 501
	add     497, 498, 499
	ldr     496, [497]
	add     494, 495, 496
	ldr     502, [FP, #-16]
	sub     493, 494, 502
	str     493, [FP, #-8]
	add     505, FP, #4
	ldr     509, [FP, #-12]
	ldr     510, [FP, #8]
	sub     508, 509, 510
	add     507, 508, #1
	mov     511, #4
	mul     506, 507, 511
	add     504, 505, 506
	ldr     503, [504]
	str     503, [FP, #-16]
	add     513, FP, #4
	ldr     517, [FP, #-12]
	ldr     518, [FP, #8]
	sub     516, 517, 518
	add     515, 516, #1
	mov     519, #4
	mul     514, 515, 519
	add     512, 513, 514
	ldr     521, [FP, #-8]
	ldr     522, [FP, #8]
	stmfd   sp!, {r0-r7}
	mov     r0, 521
	mov     r1, 522
	bl      __divsi3
	mov     520, r0
	ldmfd   sp!,{r0-r7}
	str     520, [512]
.L59:
.L62:
	ldr     524, [FP, #-12]
	add     523, 524, #1
	str     523, [FP, #-12]
	b       .L56
.L60:
	ldr     526, [FP, #-8]
	add     529, FP, #4
	ldr     531, [FP, #-12]
	mov     532, #4
	mul     530, 531, 532
	add     528, 529, 530
	ldr     527, [528]
	add     525, 526, 527
	str     525, [FP, #-8]
	b       .L62
.L57:
	add     535, FP, #4
	mov     537, #0
	mov     538, #4
	mul     536, 537, 538
	add     534, 535, 536
	ldr     533, [534]
	str     533, [FP, #-16]
	add     540, FP, #4
	mov     542, #0
	mov     543, #4
	mul     541, 542, 543
	add     539, 540, 541
	ldr     545, [FP, #-8]
	ldr     546, [FP, #8]
	stmfd   sp!, {r0-r7}
	mov     r0, 545
	mov     r1, 546
	bl      __divsi3
	mov     544, r0
	ldmfd   sp!,{r0-r7}
	str     544, [539]
	b       .L59
.L66:
	add     548, FP, #4
	ldr     550, [FP, #-12]
	mov     551, #4
	mul     549, 550, 551
	add     547, 548, 549
	mov     552, #0
	str     552, [547]
	ldr     554, [FP, #-12]
	add     553, 554, #1
	str     553, [FP, #-12]
	b       .L65
.L104:
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   avgPooling, .-avgPooling

	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     fp, sp, #4
	sub     sp, sp, #272
	ldr     585, =n
	mov     586, #32
	str     586, [585]
	add     588, FP, #-132
	mov     590, #0
	mov     591, #4
	mul     589, 590, 591
	add     587, 588, 589
	mov     592, #7
	str     592, [587]
	add     594, FP, #-132
	mov     596, #1
	mov     597, #4
	mul     595, 596, 597
	add     593, 594, 595
	mov     598, #23
	str     598, [593]
	add     600, FP, #-132
	mov     602, #2
	mov     603, #4
	mul     601, 602, 603
	add     599, 600, 601
	mov     604, #89
	str     604, [599]
	add     606, FP, #-132
	mov     608, #3
	mov     609, #4
	mul     607, 608, 609
	add     605, 606, 607
	mov     610, #26
	str     610, [605]
	add     612, FP, #-132
	mov     614, #4
	mov     615, #4
	mul     613, 614, 615
	add     611, 612, 613
	mov     616, #282
	str     616, [611]
	add     618, FP, #-132
	mov     620, #5
	mov     621, #4
	mul     619, 620, 621
	add     617, 618, 619
	mov     622, #254
	str     622, [617]
	add     624, FP, #-132
	mov     626, #6
	mov     627, #4
	mul     625, 626, 627
	add     623, 624, 625
	mov     628, #27
	str     628, [623]
	add     630, FP, #-132
	mov     632, #7
	mov     633, #4
	mul     631, 632, 633
	add     629, 630, 631
	mov     634, #5
	str     634, [629]
	add     636, FP, #-132
	mov     638, #8
	mov     639, #4
	mul     637, 638, 639
	add     635, 636, 637
	mov     640, #83
	str     640, [635]
	add     642, FP, #-132
	mov     644, #9
	mov     645, #4
	mul     643, 644, 645
	add     641, 642, 643
	mov     646, #273
	str     646, [641]
	add     648, FP, #-132
	mov     650, #10
	mov     651, #4
	mul     649, 650, 651
	add     647, 648, 649
	mov     652, #574
	str     652, [647]
	add     654, FP, #-132
	mov     656, #11
	mov     657, #4
	mul     655, 656, 657
	add     653, 654, 655
	mov     658, #905
	str     658, [653]
	add     660, FP, #-132
	mov     662, #12
	mov     663, #4
	mul     661, 662, 663
	add     659, 660, 661
	mov     664, #354
	str     664, [659]
	add     666, FP, #-132
	mov     668, #13
	mov     669, #4
	mul     667, 668, 669
	add     665, 666, 667
	mov     670, #657
	str     670, [665]
	add     672, FP, #-132
	mov     674, #14
	mov     675, #4
	mul     673, 674, 675
	add     671, 672, 673
	mov     676, #935
	str     676, [671]
	add     678, FP, #-132
	mov     680, #15
	mov     681, #4
	mul     679, 680, 681
	add     677, 678, 679
	mov     682, #264
	str     682, [677]
	add     684, FP, #-132
	mov     686, #16
	mov     687, #4
	mul     685, 686, 687
	add     683, 684, 685
	mov     688, #639
	str     688, [683]
	add     690, FP, #-132
	mov     692, #17
	mov     693, #4
	mul     691, 692, 693
	add     689, 690, 691
	mov     694, #459
	str     694, [689]
	add     696, FP, #-132
	mov     698, #18
	mov     699, #4
	mul     697, 698, 699
	add     695, 696, 697
	mov     700, #29
	str     700, [695]
	add     702, FP, #-132
	mov     704, #19
	mov     705, #4
	mul     703, 704, 705
	add     701, 702, 703
	mov     706, #68
	str     706, [701]
	add     708, FP, #-132
	mov     710, #20
	mov     711, #4
	mul     709, 710, 711
	add     707, 708, 709
	mov     712, #929
	str     712, [707]
	add     714, FP, #-132
	mov     716, #21
	mov     717, #4
	mul     715, 716, 717
	add     713, 714, 715
	mov     718, #756
	str     718, [713]
	add     720, FP, #-132
	mov     722, #22
	mov     723, #4
	mul     721, 722, 723
	add     719, 720, 721
	mov     724, #452
	str     724, [719]
	add     726, FP, #-132
	mov     728, #23
	mov     729, #4
	mul     727, 728, 729
	add     725, 726, 727
	mov     730, #279
	str     730, [725]
	add     732, FP, #-132
	mov     734, #24
	mov     735, #4
	mul     733, 734, 735
	add     731, 732, 733
	mov     736, #58
	str     736, [731]
	add     738, FP, #-132
	mov     740, #25
	mov     741, #4
	mul     739, 740, 741
	add     737, 738, 739
	mov     742, #87
	str     742, [737]
	add     744, FP, #-132
	mov     746, #26
	mov     747, #4
	mul     745, 746, 747
	add     743, 744, 745
	mov     748, #96
	str     748, [743]
	add     750, FP, #-132
	mov     752, #27
	mov     753, #4
	mul     751, 752, 753
	add     749, 750, 751
	mov     754, #36
	str     754, [749]
	add     756, FP, #-132
	mov     758, #28
	mov     759, #4
	mul     757, 758, 759
	add     755, 756, 757
	mov     760, #39
	str     760, [755]
	add     762, FP, #-132
	mov     764, #29
	mov     765, #4
	mul     763, 764, 765
	add     761, 762, 763
	mov     766, #28
	str     766, [761]
	add     768, FP, #-132
	mov     770, #30
	mov     771, #4
	mul     769, 770, 771
	add     767, 768, 769
	mov     772, #1
	str     772, [767]
	add     774, FP, #-132
	mov     776, #31
	mov     777, #4
	mul     775, 776, 777
	add     773, 774, 775
	mov     778, #290
	str     778, [773]
	add     779, FP, #-264
	mov     584, 779
	add     780, FP, #-132
	str     780, [SP]
	add     781, FP, #-260
	str     781, [SP, #4]
	bl      arrCopy
	mov     583, RV
	str     583, [584]
	add     782, FP, #-264
	mov     582, 782
	add     783, FP, #-260
	str     783, [SP]
	bl      revert
	mov     581, RV
	str     581, [582]
	mov     784, #0
	str     784, [FP, #-268]
.L68:
	ldr     785, [FP, #-268]
	mov     786, #32
	cmp     785, 786
	blt     .L69
	b       .L67
.L67:
	add     787, FP, #-264
	mov     580, 787
	add     788, FP, #-260
	str     788, [SP]
	bl      bubblesort
	mov     579, RV
	str     579, [580]
	mov     789, #0
	str     789, [FP, #-268]
.L71:
	ldr     790, [FP, #-268]
	mov     791, #32
	cmp     790, 791
	blt     .L72
	b       .L70
.L70:
	add     792, FP, #-264
	mov     578, 792
	add     793, FP, #-260
	str     793, [SP]
	bl      getMid
	mov     577, RV
	str     577, [578]
	ldr     794, [FP, #-264]
	str     794, [SP]
	bl      putint
	add     795, FP, #-264
	mov     576, 795
	add     796, FP, #-260
	str     796, [SP]
	bl      getMost
	mov     575, RV
	str     575, [576]
	ldr     797, [FP, #-264]
	str     797, [SP]
	bl      putint
	add     798, FP, #-264
	mov     574, 798
	add     799, FP, #-132
	str     799, [SP]
	add     800, FP, #-260
	str     800, [SP, #4]
	bl      arrCopy
	mov     573, RV
	str     573, [574]
	add     801, FP, #-264
	mov     572, 801
	add     802, FP, #-260
	str     802, [SP]
	bl      bubblesort
	mov     571, RV
	str     571, [572]
	mov     803, #0
	str     803, [FP, #-268]
.L74:
	ldr     804, [FP, #-268]
	mov     805, #32
	cmp     804, 805
	blt     .L75
	b       .L73
.L73:
	add     806, FP, #-264
	mov     570, 806
	add     807, FP, #-132
	str     807, [SP]
	add     808, FP, #-260
	str     808, [SP, #4]
	bl      arrCopy
	mov     569, RV
	str     569, [570]
	add     809, FP, #-264
	mov     568, 809
	add     810, FP, #-260
	str     810, [SP]
	bl      insertsort
	mov     567, RV
	str     567, [568]
	mov     811, #0
	str     811, [FP, #-268]
.L77:
	ldr     812, [FP, #-268]
	mov     813, #32
	cmp     812, 813
	blt     .L78
	b       .L76
.L76:
	add     814, FP, #-264
	mov     566, 814
	add     815, FP, #-132
	str     815, [SP]
	add     816, FP, #-260
	str     816, [SP, #4]
	bl      arrCopy
	mov     565, RV
	str     565, [566]
	mov     817, #0
	str     817, [FP, #-268]
	mov     818, #31
	str     818, [FP, #-264]
	add     819, FP, #-264
	mov     564, 819
	add     820, FP, #-260
	str     820, [SP]
	ldr     821, [FP, #-268]
	str     821, [SP, #4]
	ldr     822, [FP, #-264]
	str     822, [SP, #8]
	bl      QuickSort
	mov     563, RV
	str     563, [564]
.L80:
	ldr     823, [FP, #-268]
	mov     824, #32
	cmp     823, 824
	blt     .L81
	b       .L79
.L79:
	add     825, FP, #-264
	mov     562, 825
	add     826, FP, #-132
	str     826, [SP]
	add     827, FP, #-260
	str     827, [SP, #4]
	bl      arrCopy
	mov     561, RV
	str     561, [562]
	add     828, FP, #-264
	mov     560, 828
	add     829, FP, #-260
	str     829, [SP]
	mov     830, #4
	str     830, [SP, #4]
	bl      calSum
	mov     559, RV
	str     559, [560]
	mov     831, #0
	str     831, [FP, #-268]
.L83:
	ldr     832, [FP, #-268]
	mov     833, #32
	cmp     832, 833
	blt     .L84
	b       .L82
.L82:
	add     834, FP, #-264
	mov     558, 834
	add     835, FP, #-132
	str     835, [SP]
	add     836, FP, #-260
	str     836, [SP, #4]
	bl      arrCopy
	mov     557, RV
	str     557, [558]
	add     837, FP, #-264
	mov     556, 837
	add     838, FP, #-260
	str     838, [SP]
	mov     839, #3
	str     839, [SP, #4]
	bl      avgPooling
	mov     555, RV
	str     555, [556]
	mov     840, #0
	str     840, [FP, #-268]
.L86:
	ldr     841, [FP, #-268]
	mov     842, #32
	cmp     841, 842
	blt     .L87
	b       .L85
.L85:
	mov     843, #0
	mov     RV, 843
	b       .L106
.L69:
	add     846, FP, #-260
	ldr     848, [FP, #-268]
	mov     849, #4
	mul     847, 848, 849
	add     845, 846, 847
	ldr     844, [845]
	str     844, [FP, #-264]
	ldr     850, [FP, #-264]
	str     850, [SP]
	bl      putint
	ldr     852, [FP, #-268]
	add     851, 852, #1
	str     851, [FP, #-268]
	b       .L68
.L72:
	add     855, FP, #-260
	ldr     857, [FP, #-268]
	mov     858, #4
	mul     856, 857, 858
	add     854, 855, 856
	ldr     853, [854]
	str     853, [FP, #-264]
	ldr     859, [FP, #-264]
	str     859, [SP]
	bl      putint
	ldr     861, [FP, #-268]
	add     860, 861, #1
	str     860, [FP, #-268]
	b       .L71
.L75:
	add     864, FP, #-260
	ldr     866, [FP, #-268]
	mov     867, #4
	mul     865, 866, 867
	add     863, 864, 865
	ldr     862, [863]
	str     862, [FP, #-264]
	ldr     868, [FP, #-264]
	str     868, [SP]
	bl      putint
	ldr     870, [FP, #-268]
	add     869, 870, #1
	str     869, [FP, #-268]
	b       .L74
.L78:
	add     873, FP, #-260
	ldr     875, [FP, #-268]
	mov     876, #4
	mul     874, 875, 876
	add     872, 873, 874
	ldr     871, [872]
	str     871, [FP, #-264]
	ldr     877, [FP, #-264]
	str     877, [SP]
	bl      putint
	ldr     879, [FP, #-268]
	add     878, 879, #1
	str     878, [FP, #-268]
	b       .L77
.L81:
	add     882, FP, #-260
	ldr     884, [FP, #-268]
	mov     885, #4
	mul     883, 884, 885
	add     881, 882, 883
	ldr     880, [881]
	str     880, [FP, #-264]
	ldr     886, [FP, #-264]
	str     886, [SP]
	bl      putint
	ldr     888, [FP, #-268]
	add     887, 888, #1
	str     887, [FP, #-268]
	b       .L80
.L84:
	add     891, FP, #-260
	ldr     893, [FP, #-268]
	mov     894, #4
	mul     892, 893, 894
	add     890, 891, 892
	ldr     889, [890]
	str     889, [FP, #-264]
	ldr     895, [FP, #-264]
	str     895, [SP]
	bl      putint
	ldr     897, [FP, #-268]
	add     896, 897, #1
	str     896, [FP, #-268]
	b       .L83
.L87:
	add     900, FP, #-260
	ldr     902, [FP, #-268]
	mov     903, #4
	mul     901, 902, 903
	add     899, 900, 901
	ldr     898, [899]
	str     898, [FP, #-264]
	ldr     904, [FP, #-264]
	str     904, [SP]
	bl      putint
	ldr     906, [FP, #-268]
	add     905, 906, #1
	str     905, [FP, #-268]
	b       .L86
.L106:
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main

