
before semantic ast:
 decList(
  variableDec(a,
   int,
   FALSE),
  decList(
   functionDec(myFunc,
    fieldList(
     field(a,
      int,
      expList(),
      FALSE,
     fieldList(
      field(b,
       int,
       expList(),
       FALSE,
      fieldList(
       field(c,
        int,
        expList(),
        FALSE,
       fieldList()))),
    int,
    blockStm(
     comStmList(
      comStm(
       assignStm(
        simpleVar(a),
        intExp(2))),
      comStmList(
       comStm(
        blockStm(
         comStmList(
          comStm(
           decList(
            variableDec(c,
             int,
             FALSE),
            decList()),),
          comStmList(
           comStm(
            assignStm(
             simpleVar(c),
             intExp(0))),
           comStmList(
            comStm(
             ifStm(
              opExp(
               ne,
               varExp(
                simpleVar(c)),
               intExp(0)),
              blockStm(
               comStmList(
                comStm(
                 returnStm(
                  intExp(0))),
                comStmList()))              )),
            comStmList()))))),
       comStmList(
        comStm(
         whileStm(
          opExp(
           gt,
           varExp(
            simpleVar(b)),
           intExp(0)),
          blockStm(
           comStmList(
            comStm(
             assignStm(
              simpleVar(b),
              opExp(
               sub,
               varExp(
                simpleVar(b)),
               intExp(1)))),
            comStmList())))
),
        comStmList(
         comStm(
          returnStm(
           opExp(
            add,
            varExp(
             simpleVar(a)),
            varExp(
             simpleVar(b))))),
         comStmList())))))),
   decList(
    functionDec(main,
     fieldList(),
     int,
     blockStm(
      comStmList(
       comStm(
        assignStm(
         simpleVar(a),
         intExp(3))),
       comStmList(
        comStm(
         decList(
          variableDec(b,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(b),
           callExp(myFunc,
            expList(
             intExp(1),
             expList(
              intExp(2),
              expList(
               intExp(1),
               expList())))))),
         comStmList(
          comStm(
           returnStm(
            opExp(
             add,
             varExp(
              simpleVar(a)),
             varExp(
              simpleVar(b))))),
          comStmList())))))),
    decList())))

after semantic ast:
 decList(
  variableDec(a,
   int,
   FALSE),
  decList(
   functionDec(myFunc,
    fieldList(
     field(a,
      int,
      expList(),
      FALSE,
     fieldList(
      field(b,
       int,
       expList(),
       FALSE,
      fieldList(
       field(c,
        int,
        expList(),
        FALSE,
       fieldList()))),
    int,
    blockStm(
     comStmList(
      comStm(
       assignStm(
        simpleVar(a),
        intExp(2))),
      comStmList(
       comStm(
        blockStm(
         comStmList(
          comStm(
           decList(
            variableDec(c,
             int,
             FALSE),
            decList()),),
          comStmList(
           comStm(
            assignStm(
             simpleVar(c),
             intExp(0))),
           comStmList(
            comStm(
             ifStm(
              opExp(
               ne,
               varExp(
                simpleVar(c)),
               intExp(0)),
              blockStm(
               comStmList(
                comStm(
                 returnStm(
                  intExp(0))),
                comStmList()))              )),
            comStmList()))))),
       comStmList(
        comStm(
         whileStm(
          opExp(
           gt,
           varExp(
            simpleVar(b)),
           intExp(0)),
          blockStm(
           comStmList(
            comStm(
             assignStm(
              simpleVar(b),
              opExp(
               sub,
               varExp(
                simpleVar(b)),
               intExp(1)))),
            comStmList())))
),
        comStmList(
         comStm(
          returnStm(
           opExp(
            add,
            varExp(
             simpleVar(a)),
            varExp(
             simpleVar(b))))),
         comStmList())))))),
   decList(
    functionDec(main,
     fieldList(),
     int,
     blockStm(
      comStmList(
       comStm(
        assignStm(
         simpleVar(a),
         intExp(3))),
       comStmList(
        comStm(
         decList(
          variableDec(b,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          assignStm(
           simpleVar(b),
           callExp(myFunc,
            expList(
             intExp(1),
             expList(
              intExp(2),
              expList(
               intExp(1),
               expList())))))),
         comStmList(
          comStm(
           returnStm(
            opExp(
             add,
             varExp(
              simpleVar(a)),
             varExp(
              simpleVar(b))))),
          comStmList())))))),
    decList())))
semantic check finish !

↓---------------IR TREE BEFORE CANNO PRINTF START---------------↓
 SEQ(
  LABEL L8,
  SEQ(
   SEQ(
    SEQ(
     MOVE(
      NAME a,
      CONST 3),
     EXP(
      CONST 0)),
    MOVE(
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST -4)),
     CALL(
      NAME L0,
       TEMP tFP,
       CONST 1,
       CONST 2,
       CONST 1))),
   MOVE(
    TEMP tRV,
    BINOP(T_add,
     NAME a,
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST -4)))))) SEQ(
  LABEL L0,
  SEQ(
   SEQ(
    SEQ(
     MOVE(
      MEM(
       BINOP(T_add,
        TEMP tFP,
        CONST 4)),
      CONST 2),
     SEQ(
      SEQ(
       EXP(
        CONST 0),
       MOVE(
        MEM(
         BINOP(T_add,
          TEMP tFP,
          CONST -4)),
        CONST 0)),
      SEQ(
       SEQ(
        CJUMP(T_ne,
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST -4)),
         CONST 0,
         L1,L2),
        SEQ(
         LABEL L1,
         MOVE(
          TEMP tRV,
          CONST 0))),
       LABEL L2))),
    SEQ(
     LABEL L4,
     SEQ(
      CJUMP(T_gt,
       MEM(
        BINOP(T_add,
         TEMP tFP,
         CONST 4)),
       CONST 0,
       L7,L3),
      SEQ(
       LABEL L7,
       SEQ(
        MOVE(
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST 4)),
         BINOP(T_sub,
          MEM(
           BINOP(T_add,
            TEMP tFP,
            CONST 4)),
          CONST 1)),
        SEQ(
         JUMP(
          NAME L4),
         LABEL L3)))))),
   MOVE(
    TEMP tRV,
    BINOP(T_add,
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST 4)),
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST 4))))))
↑---------------IR TREE BEFORE CANNO PRINTF OVER---------------↑

↓---------------IR TREE AFTER CANNO PRINTF START---------------↓
 LABEL L8
----dived line----
 MOVE(
  NAME a,
  CONST 3)
----dived line----
 MOVE(
  TEMP t102,
  BINOP(T_add,
   TEMP tFP,
   CONST -4))
----dived line----
 MOVE(
  TEMP t101,
  CALL(
   NAME L0,
    TEMP tFP,
    CONST 1,
    CONST 2,
    CONST 1))
----dived line----
 MOVE(
  MEM(
   TEMP t102),
  TEMP t101)
----dived line----
 MOVE(
  TEMP tRV,
  BINOP(T_add,
   NAME a,
   MEM(
    BINOP(T_add,
     TEMP tFP,
     CONST -4))))
----dived line----
 JUMP(
  NAME L9)
----dived line----
 LABEL L9
----dived line----

↑---------------IR TREE AFTER CANNO PRINTF OVER---------------↑
compiler_dev_cpp: /mnt/e/compiler/compiler-dev-cpp-new/codegen.cpp:293: void munchStm(T_stm): Assertion `0' failed.
Aborted
