	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/34_func_test2.sy"
	.data
	.text
	.align  2
	.global func1
	.type   func1, %function
func1:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #8
	mov     R10, #1
	str     R10, [FP, #-8]
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L0
.L0:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   func1, .-func1
	.align  2
	.global func2
	.type   func2, %function
func2:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #8
	mov     R10, #2
	str     R10, [FP, #-8]
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L1
.L1:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   func2, .-func2
	.align  2
	.global func3
	.type   func3, %function
func3:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #8
	mov     R10, #4
	str     R10, [FP, #-8]
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L2
.L2:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   func3, .-func3
	.align  2
	.global func4
	.type   func4, %function
func4:
	str     fp, [sp, #-4]!
	add     FP, SP, #0
	sub     SP, SP, #16
	mov     R10, #8
	str     R10, [FP, #-12]
	ldr     R10, [FP, #-12]
	str     R10, [FP, #-8]
	mov     R10, #16
	str     R10, [FP, #-16]
	ldr     R10, [FP, #-8]
	ldr     R0, [FP, #-16]
	add     R10, R10, R0
	str     R10, [FP, #-8]
	ldr     R10, [FP, #-8]
	mov     R0, R10
	b       .L3
.L3:
NOP
	sub     sp, fp, #0
	ldr     fp, [sp], #4
	bx      lr
	.size   func4, .-func4
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #16
	mov     R1, #32
	str     R1, [FP, #-8]
	mov     R1, #32
	str     R1, [FP, #-12]
	mov     R1, #32
	str     R1, [FP, #-16]
	bl      func1
	mov     R1, R0
# 	mov     R1, R1
	bl      func2
	mov     R2, R0
	add     R1, R1, R2
# 	mov     R1, R1
	bl      func3
	mov     R2, R0
	add     R1, R1, R2
# 	mov     R1, R1
	bl      func4
	mov     R10, R0
	add     R10, R1, R10
	ldr     R0, [FP, #-8]
	add     R10, R10, R0
	ldr     R0, [FP, #-12]
	add     R10, R10, R0
	ldr     R0, [FP, #-16]
	add     R10, R10, R0
	mov     R0, R10
	b       .L4
.L4:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
