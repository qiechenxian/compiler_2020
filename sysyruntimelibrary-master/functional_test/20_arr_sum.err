	.arch   armv7-a
	.file   "/mnt/e/workspace_clion/compiler_2020/sysyruntimelibrary-master/functional_test/20_arr_sum.sy"
	.data
	.comm   a, 20, 4
	.text
	.align  2
	.global main
	.type   main, %function
main:
	stmfd   sp!, {fp, lr}
	add     FP, SP, #4
	sub     SP, SP, #12
	ldr     R9, =a
	mov     R1, #0
	mov     R10, #4
	mul     R1, R1, R10
	add     R1, R9, R1
# 	mov     R1, R1
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R2, R0
	str     R2, [R1]
	ldr     R9, =a
	mov     R1, #1
	mov     R10, #4
	mul     R1, R1, R10
	add     R1, R9, R1
# 	mov     R1, R1
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R2, R0
	str     R2, [R1]
	ldr     R9, =a
	mov     R1, #2
	mov     R10, #4
	mul     R1, R1, R10
	add     R1, R9, R1
# 	mov     R1, R1
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R2, R0
	str     R2, [R1]
	ldr     R9, =a
	mov     R1, #3
	mov     R10, #4
	mul     R1, R1, R10
	add     R1, R9, R1
# 	mov     R1, R1
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R2, R0
	str     R2, [R1]
	ldr     R9, =a
	mov     R1, #4
	mov     R10, #4
	mul     R1, R1, R10
	add     R1, R9, R1
# 	mov     R1, R1
	bl      getint
	ldr     r0, [SP, #-4]
	ldr     r1, [SP, #-8]
	ldr     r2, [SP, #-12]
	ldr     r3, [SP, #-16]
	mov     R10, R0
	str     R10, [R1]
	mov     R10, #4
	str     R10, [FP, #-8]
	mov     R10, #0
	str     R10, [FP, #-12]
.L1:
	ldr     R0, [FP, #-8]
	mov     R10, #1
	cmp     R0, R10
	bgt     .L2
	b       .L0
.L0:
	ldr     R10, [FP, #-12]
	mov     R0, R10
	b       .L3
.L2:
	ldr     R8, [FP, #-12]
	ldr     R10, =a
	ldr     R9, [FP, #-8]
	mov     R0, #4
	mul     R0, R9, R0
	add     R10, R10, R0
	ldr     R10, [R10]
	add     R10, R8, R10
	str     R10, [FP, #-12]
	ldr     R10, [FP, #-8]
	sub     R10, R10, #1
	str     R10, [FP, #-8]
	b       .L1
.L3:
NOP
	sub     sp, fp, #4
	ldmfd   sp!, {fp, lr}
	bx      lr
	.size   main, .-main
