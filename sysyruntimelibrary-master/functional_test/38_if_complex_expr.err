
before semantic ast:
 decList(
  functionDec(main,
   fieldList(),
   int,
   blockStm(
    comStmList(
     comStm(
      decList(
       variableDec(a,
        int,
        FALSE),
       decList()),),
     comStmList(
      comStm(
       decList(
        variableDec(b,
         int,
         FALSE),
        decList()),),
      comStmList(
       comStm(
        decList(
         variableDec(c,
          int,
          FALSE),
         decList()),),
       comStmList(
        comStm(
         decList(
          variableDec(d,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          decList(
           variableDec(result,
            int,
            FALSE),
           decList()),),
         comStmList(
          comStm(
           assignStm(
            simpleVar(a),
            intExp(5))),
          comStmList(
           comStm(
            assignStm(
             simpleVar(b),
             intExp(5))),
           comStmList(
            comStm(
             assignStm(
              simpleVar(c),
              intExp(1))),
            comStmList(
             comStm(
              assignStm(
               simpleVar(d),
               opExp(
                sub,
                intExp(0),
                intExp(2)))),
             comStmList(
              comStm(
               assignStm(
                simpleVar(result),
                intExp(2))),
              comStmList(
               comStm(
                ifStm(
                 opExp(
                  and,
                  opExp(
                   lt,
                   opExp(
                    dev,
                    opExp(
                     mul,
                     varExp(
                      simpleVar(d)),
                     intExp(1)),
                    intExp(2)),
                   intExp(0)),
                  opExp(
                   or,
                   opExp(
                    ne,
                    opExp(
                     sub,
                     varExp(
                      simpleVar(a)),
                     varExp(
                      simpleVar(b))),
                    intExp(0)),
                   opExp(
                    ne,
                    opExp(
                     mod,
                     opExp(
                      add,
                      varExp(
                       simpleVar(c)),
                      intExp(3)),
                     intExp(2)),
                    intExp(0)))),
                 blockStm(
                  comStmList(
                   comStm(
                    expStm(
                     callExp(putint,
                      expList(
                       varExp(
                        simpleVar(result)),
                       expList()))),
                   comStmList()))                 )),
               comStmList(
                comStm(
                 ifStm(
                  opExp(
                   and,
                   opExp(
                    lt,
                    opExp(
                     add,
                     opExp(
                      mod,
                      varExp(
                       simpleVar(d)),
                      intExp(2)),
                     intExp(67)),
                    intExp(0)),
                   opExp(
                    or,
                    opExp(
                     ne,
                     opExp(
                      sub,
                      varExp(
                       simpleVar(a)),
                      varExp(
                       simpleVar(b))),
                     intExp(0)),
                    opExp(
                     ne,
                     opExp(
                      mod,
                      opExp(
                       add,
                       varExp(
                        simpleVar(c)),
                       intExp(2)),
                      intExp(2)),
                     intExp(0)))),
                  blockStm(
                   comStmList(
                    comStm(
                     assignStm(
                      simpleVar(result),
                      intExp(4))),
                    comStmList(
                     comStm(
                      expStm(
                       callExp(putint,
                        expList(
                         varExp(
                          simpleVar(result)),
                         expList()))),
                     comStmList())))                  )),
                comStmList(
                 comStm(
                  returnStm(
                   intExp(0))),
                 comStmList()))))))))))))))),
  decList())

after semantic ast:
 decList(
  functionDec(main,
   fieldList(),
   int,
   blockStm(
    comStmList(
     comStm(
      decList(
       variableDec(a,
        int,
        FALSE),
       decList()),),
     comStmList(
      comStm(
       decList(
        variableDec(b,
         int,
         FALSE),
        decList()),),
      comStmList(
       comStm(
        decList(
         variableDec(c,
          int,
          FALSE),
         decList()),),
       comStmList(
        comStm(
         decList(
          variableDec(d,
           int,
           FALSE),
          decList()),),
        comStmList(
         comStm(
          decList(
           variableDec(result,
            int,
            FALSE),
           decList()),),
         comStmList(
          comStm(
           assignStm(
            simpleVar(a),
            intExp(5))),
          comStmList(
           comStm(
            assignStm(
             simpleVar(b),
             intExp(5))),
           comStmList(
            comStm(
             assignStm(
              simpleVar(c),
              intExp(1))),
            comStmList(
             comStm(
              assignStm(
               simpleVar(d),
               intExp(-2))),
             comStmList(
              comStm(
               assignStm(
                simpleVar(result),
                intExp(2))),
              comStmList(
               comStm(
                ifStm(
                 opExp(
                  and,
                  opExp(
                   lt,
                   opExp(
                    dev,
                    opExp(
                     mul,
                     varExp(
                      simpleVar(d)),
                     intExp(1)),
                    intExp(2)),
                   intExp(0)),
                  opExp(
                   or,
                   opExp(
                    ne,
                    opExp(
                     sub,
                     varExp(
                      simpleVar(a)),
                     varExp(
                      simpleVar(b))),
                    intExp(0)),
                   opExp(
                    ne,
                    opExp(
                     mod,
                     opExp(
                      add,
                      varExp(
                       simpleVar(c)),
                      intExp(3)),
                     intExp(2)),
                    intExp(0)))),
                 blockStm(
                  comStmList(
                   comStm(
                    expStm(
                     callExp(putint,
                      expList(
                       varExp(
                        simpleVar(result)),
                       expList()))),
                   comStmList()))                 )),
               comStmList(
                comStm(
                 ifStm(
                  opExp(
                   and,
                   opExp(
                    lt,
                    opExp(
                     add,
                     opExp(
                      mod,
                      varExp(
                       simpleVar(d)),
                      intExp(2)),
                     intExp(67)),
                    intExp(0)),
                   opExp(
                    or,
                    opExp(
                     ne,
                     opExp(
                      sub,
                      varExp(
                       simpleVar(a)),
                      varExp(
                       simpleVar(b))),
                     intExp(0)),
                    opExp(
                     ne,
                     opExp(
                      mod,
                      opExp(
                       add,
                       varExp(
                        simpleVar(c)),
                       intExp(2)),
                      intExp(2)),
                     intExp(0)))),
                  blockStm(
                   comStmList(
                    comStm(
                     assignStm(
                      simpleVar(result),
                      intExp(4))),
                    comStmList(
                     comStm(
                      expStm(
                       callExp(putint,
                        expList(
                         varExp(
                          simpleVar(result)),
                         expList()))),
                     comStmList())))                  )),
                comStmList(
                 comStm(
                  returnStm(
                   intExp(0))),
                 comStmList()))))))))))))))),
  decList())
semantic check finish !

↓---------------IR TREE BEFORE CANNO PRINTF START---------------↓
 SEQ(
  LABEL L0,
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         SEQ(
          SEQ(
           SEQ(
            SEQ(
             SEQ(
              EXP(
               CONST 0),
              EXP(
               CONST 0)),
             EXP(
              CONST 0)),
            EXP(
             CONST 0)),
           EXP(
            CONST 0)),
          MOVE(
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -4)),
           CONST 5)),
         MOVE(
          MEM(
           BINOP(T_add,
            TEMP tFP,
            CONST -8)),
          CONST 5)),
        MOVE(
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST -12)),
         CONST 1)),
       MOVE(
        MEM(
         BINOP(T_add,
          TEMP tFP,
          CONST -16)),
        BINOP(T_sub,
         CONST 0,
         CONST 2))),
      MOVE(
       MEM(
        BINOP(T_add,
         TEMP tFP,
         CONST -20)),
       CONST 2)),
     SEQ(
      SEQ(
       SEQ(
        CJUMP(T_lt,
         BINOP(T_div,
          BINOP(T_mul,
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -16)),
           CONST 1),
          CONST 2),
         CONST 0,
         L2,L4),
        SEQ(
         LABEL L2,
         SEQ(
          CJUMP(T_ne,
           BINOP(T_sub,
            MEM(
             BINOP(T_add,
              TEMP tFP,
              CONST -4)),
            MEM(
             BINOP(T_add,
              TEMP tFP,
              CONST -8))),
           CONST 0,
           L3,L1),
          SEQ(
           LABEL L1,
           CJUMP(T_ne,
            BINOP(T_mod,
             BINOP(T_add,
              MEM(
               BINOP(T_add,
                TEMP tFP,
                CONST -12)),
              CONST 3),
             CONST 2),
            CONST 0,
            L3,L4))))),
       SEQ(
        LABEL L3,
        EXP(
         CALL(
          NAME putint,
           TEMP tFP,
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -20)))))),
      LABEL L4)),
    SEQ(
     SEQ(
      SEQ(
       CJUMP(T_lt,
        BINOP(T_add,
         BINOP(T_mod,
          MEM(
           BINOP(T_add,
            TEMP tFP,
            CONST -16)),
          CONST 2),
         CONST 67),
        CONST 0,
        L6,L8),
       SEQ(
        LABEL L6,
        SEQ(
         CJUMP(T_ne,
          BINOP(T_sub,
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -4)),
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -8))),
          CONST 0,
          L7,L5),
         SEQ(
          LABEL L5,
          CJUMP(T_ne,
           BINOP(T_mod,
            BINOP(T_add,
             MEM(
              BINOP(T_add,
               TEMP tFP,
               CONST -12)),
             CONST 2),
            CONST 2),
           CONST 0,
           L7,L8))))),
      SEQ(
       LABEL L7,
       SEQ(
        MOVE(
         MEM(
          BINOP(T_add,
           TEMP tFP,
           CONST -20)),
         CONST 4),
        EXP(
         CALL(
          NAME putint,
           TEMP tFP,
           MEM(
            BINOP(T_add,
             TEMP tFP,
             CONST -20))))))),
     LABEL L8)),
   MOVE(
    TEMP tRV,
    CONST 0)))
↑---------------IR TREE BEFORE CANNO PRINTF OVER---------------↑

↓---------------IR TREE AFTER CANNO PRINTF START---------------↓
 LABEL L0
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -4)),
  CONST 5)
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -8)),
  CONST 5)
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -12)),
  CONST 1)
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -16)),
  BINOP(T_sub,
   CONST 0,
   CONST 2))
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -20)),
  CONST 2)
----dived line----
 CJUMP(T_lt,
  BINOP(T_div,
   BINOP(T_mul,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -16)),
    CONST 1),
   CONST 2),
  CONST 0,
  L2,L4)
----dived line----
 LABEL L4
----dived line----
 CJUMP(T_lt,
  BINOP(T_add,
   BINOP(T_mod,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -16)),
    CONST 2),
   CONST 67),
  CONST 0,
  L6,L8)
----dived line----
 LABEL L8
----dived line----
 MOVE(
  TEMP tRV,
  CONST 0)
----dived line----
 JUMP(
  NAME L9)
----dived line----
 LABEL L2
----dived line----
 CJUMP(T_ne,
  BINOP(T_sub,
   MEM(
    BINOP(T_add,
     TEMP tFP,
     CONST -4)),
   MEM(
    BINOP(T_add,
     TEMP tFP,
     CONST -8))),
  CONST 0,
  L3,L1)
----dived line----
 LABEL L1
----dived line----
 CJUMP(T_ne,
  BINOP(T_mod,
   BINOP(T_add,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -12)),
    CONST 3),
   CONST 2),
  CONST 0,
  L4,L3)
----dived line----
 LABEL L3
----dived line----
 EXP(
  CALL(
   NAME putint,
    TEMP tFP,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -20))))
----dived line----
 JUMP(
  NAME L4)
----dived line----
 LABEL L6
----dived line----
 CJUMP(T_ne,
  BINOP(T_sub,
   MEM(
    BINOP(T_add,
     TEMP tFP,
     CONST -4)),
   MEM(
    BINOP(T_add,
     TEMP tFP,
     CONST -8))),
  CONST 0,
  L7,L5)
----dived line----
 LABEL L5
----dived line----
 CJUMP(T_ne,
  BINOP(T_mod,
   BINOP(T_add,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -12)),
    CONST 2),
   CONST 2),
  CONST 0,
  L8,L7)
----dived line----
 LABEL L7
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -20)),
  CONST 4)
----dived line----
 EXP(
  CALL(
   NAME putint,
    TEMP tFP,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -20))))
----dived line----
 JUMP(
  NAME L8)
----dived line----
 LABEL L9
----dived line----

↑---------------IR TREE AFTER CANNO PRINTF OVER---------------↑
Segmentation fault
