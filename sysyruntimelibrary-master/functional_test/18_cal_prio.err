
before semantic ast:
 decList(
  variableDec(a,
   int,
   FALSE),
  decList(
   variableDec(b,
    int,
    FALSE),
   decList(
    variableDec(c,
     int,
     FALSE),
    decList(
     functionDec(main,
      fieldList(),
      int,
      blockStm(
       comStmList(
        comStm(
         assignStm(
          simpleVar(a),
          callExp(getint,
           expList()))),
        comStmList(
         comStm(
          assignStm(
           simpleVar(b),
           callExp(getint,
            expList()))),
         comStmList(
          comStm(
           assignStm(
            simpleVar(c),
            callExp(getint,
             expList()))),
          comStmList(
           comStm(
            decList(
             variableDec(d,
              int,
              FALSE),
             decList()),),
           comStmList(
            comStm(
             assignStm(
              simpleVar(d),
              opExp(
               add,
               varExp(
                simpleVar(a)),
               opExp(
                mul,
                varExp(
                 simpleVar(b)),
                varExp(
                 simpleVar(c)))))),
            comStmList(
             comStm(
              returnStm(
               varExp(
                simpleVar(d)))),
             comStmList())))))))),
     decList()))))

after semantic ast:
 decList(
  variableDec(a,
   int,
   FALSE),
  decList(
   variableDec(b,
    int,
    FALSE),
   decList(
    variableDec(c,
     int,
     FALSE),
    decList(
     functionDec(main,
      fieldList(),
      int,
      blockStm(
       comStmList(
        comStm(
         assignStm(
          simpleVar(a),
          callExp(getint,
           expList()))),
        comStmList(
         comStm(
          assignStm(
           simpleVar(b),
           callExp(getint,
            expList()))),
         comStmList(
          comStm(
           assignStm(
            simpleVar(c),
            callExp(getint,
             expList()))),
          comStmList(
           comStm(
            decList(
             variableDec(d,
              int,
              FALSE),
             decList()),),
           comStmList(
            comStm(
             assignStm(
              simpleVar(d),
              opExp(
               add,
               varExp(
                simpleVar(a)),
               opExp(
                mul,
                varExp(
                 simpleVar(b)),
                varExp(
                 simpleVar(c)))))),
            comStmList(
             comStm(
              returnStm(
               varExp(
                simpleVar(d)))),
             comStmList())))))))),
     decList()))))
semantic check finish !

↓---------------IR TREE BEFORE CANNO PRINTF START---------------↓
 SEQ(
  LABEL L0,
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        NAME a,
        CALL(
         NAME getint,
          TEMP tFP)),
       MOVE(
        NAME b,
        CALL(
         NAME getint,
          TEMP tFP))),
      MOVE(
       NAME c,
       CALL(
        NAME getint,
         TEMP tFP))),
     EXP(
      CONST 0)),
    MOVE(
     MEM(
      BINOP(T_add,
       TEMP tFP,
       CONST -4)),
     BINOP(T_add,
      NAME a,
      BINOP(T_mul,
       NAME b,
       NAME c)))),
   MOVE(
    TEMP tRV,
    MEM(
     BINOP(T_add,
      TEMP tFP,
      CONST -4)))))
↑---------------IR TREE BEFORE CANNO PRINTF OVER---------------↑

↓---------------IR TREE AFTER CANNO PRINTF START---------------↓
 LABEL L0
----dived line----
 MOVE(
  NAME a,
  CALL(
   NAME getint,
    TEMP tFP))
----dived line----
 MOVE(
  NAME b,
  CALL(
   NAME getint,
    TEMP tFP))
----dived line----
 MOVE(
  NAME c,
  CALL(
   NAME getint,
    TEMP tFP))
----dived line----
 MOVE(
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -4)),
  BINOP(T_add,
   NAME a,
   BINOP(T_mul,
    NAME b,
    NAME c)))
----dived line----
 MOVE(
  TEMP tRV,
  MEM(
   BINOP(T_add,
    TEMP tFP,
    CONST -4)))
----dived line----
 JUMP(
  NAME L1)
----dived line----
 LABEL L1
----dived line----

↑---------------IR TREE AFTER CANNO PRINTF OVER---------------↑
compiler_dev_cpp: /mnt/e/compiler/compiler-dev-cpp-new/codegen.cpp:293: void munchStm(T_stm): Assertion `0' failed.
Aborted
