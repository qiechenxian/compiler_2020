Terminals unused in grammar

   CHAR
   SWITCH
   CASE
   COLON
   CHARACTER


State 174 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CompUnit

    2 CompUnit: CompUnit Decl
    3         | CompUnit FuncDef
    4         | Decl
    5         | FuncDef

    6 Decl: ConstDecl
    7     | VarDecl

    8 ConstDecl: CONST BType ConstDefList SEMICOLON

    9 ConstDefList: ConstDefList COMMA ConstDef
   10             | ConstDef

   11 BType: INT

   12 ConstDef: Ident ASSIGNMENT ConstExp
   13         | Ident ConstSubscripts ASSIGNMENT ConstInitVal

   14 ConstSubscripts: ConstSubscripts L_BRACKETS ConstExp R_BRACKETS
   15                | L_BRACKETS ConstExp R_BRACKETS

   16 ConstInitVal: L_BRACE ConstInitValList R_BRACE
   17             | L_BRACE R_BRACE

   18 ConstInitValList: ConstInitValList COMMA ConstInitVal
   19                 | ConstInitValList COMMA ConstExp
   20                 | ConstInitVal
   21                 | ConstExp

   22 VarDecl: BType VarDefList SEMICOLON

   23 VarDefList: VarDefList COMMA VarDef
   24           | VarDef

   25 VarDef: Ident
   26       | Ident ASSIGNMENT Exp
   27       | Ident ConstSubscripts
   28       | Ident ConstSubscripts ASSIGNMENT InitVal

   29 InitVal: L_BRACE InitValList R_BRACE
   30        | L_BRACE R_BRACE

   31 InitValList: InitValList COMMA Exp
   32            | InitValList COMMA InitVal
   33            | Exp
   34            | InitVal

   35 FuncDef: VOID Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   36        | VOID Ident L_PARENTHESIS R_PARENTHESIS Block
   37        | BType Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   38        | BType Ident L_PARENTHESIS R_PARENTHESIS Block

   39 FuncFParams: FuncFParams COMMA FuncFParam
   40            | FuncFParam

   41 FuncFParam: BType Ident
   42           | BType Ident ExpSubscripts

   43 ExpSubscripts: ExpSubscripts L_BRACKETS Exp R_BRACKETS
   44              | L_BRACKETS R_BRACKETS
   45              | L_BRACKETS Exp R_BRACKETS

   46 Block: L_BRACE BlockItem R_BRACE
   47      | L_BRACE R_BRACE

   48 BlockItem: BlockItem Decl
   49          | BlockItem Stmt
   50          | Decl
   51          | Stmt

   52 Stmt: LVal ASSIGNMENT Exp SEMICOLON
   53     | Exp SEMICOLON
   54     | SEMICOLON
   55     | Block
   56     | IF L_PARENTHESIS Cond R_PARENTHESIS Stmt
   57     | IF L_PARENTHESIS Cond R_PARENTHESIS Stmt ELSE Stmt
   58     | WHILE L_PARENTHESIS Cond R_PARENTHESIS Stmt
   59     | BREAK SEMICOLON
   60     | CONTINUE SEMICOLON
   61     | RETURN Exp SEMICOLON
   62     | RETURN SEMICOLON

   63 FuncRParams: FuncRParams COMMA Exp
   64            | Exp

   65 LVal: Ident
   66     | LVal L_BRACKETS Exp R_BRACKETS

   67 Cond: LOrExp

   68 LOrExp: LAndExp
   69       | LOrExp OR LAndExp

   70 LAndExp: EqExp
   71        | LAndExp AND EqExp

   72 EqExp: RelExp
   73      | EqExp EqOp RelExp

   74 RelExp: AddExp
   75       | RelExp RelOp AddExp

   76 RelOp: LT
   77      | LE
   78      | GT
   79      | GE

   80 EqOp: EQ
   81     | NE

   82 addOp: ADD
   83      | SUB

   84 mulOp: MUL
   85      | DIV
   86      | MOD

   87 UnaryOp: ADD
   88        | SUB
   89        | NOT

   90 Exp: AddExp

   91 AddExp: MulExp
   92       | AddExp addOp MulExp

   93 MulExp: UnaryExp
   94       | MulExp mulOp UnaryExp

   95 UnaryExp: PrimaryExp
   96         | Ident L_PARENTHESIS FuncRParams R_PARENTHESIS
   97         | Ident L_PARENTHESIS R_PARENTHESIS
   98         | UnaryOp UnaryExp

   99 PrimaryExp: L_PARENTHESIS Exp R_PARENTHESIS
  100           | LVal
  101           | Number
  102           | STRING

  103 ConstExp: AddExp

  104 Number: INTEGER

  105 Ident: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 82 87
SUB (259) 83 88
MUL (260) 84
DIV (261) 85
MOD (262) 86
LT (263) 76
LE (264) 77
GT (265) 78
GE (266) 79
NOT (267) 89
AND (268) 71
OR (269) 69
EQ (270) 80
NE (271) 81
ASSIGNMENT (272) 12 13 26 28 52
CONST (273) 8
INT (274) 11
CHAR (275)
VOID (276) 35 36
IF (277) 56 57
ELSE (278) 57
WHILE (279) 58
SWITCH (280)
CASE (281)
RETURN (282) 61 62
BREAK (283) 59
CONTINUE (284) 60
COMMA (285) 9 18 19 23 31 32 39 63
SEMICOLON (286) 8 22 52 53 54 59 60 61 62
COLON (287)
L_PARENTHESIS (288) 35 36 37 38 56 57 58 96 97 99
R_PARENTHESIS (289) 35 36 37 38 56 57 58 96 97 99
L_BRACKETS (290) 14 15 43 44 45 66
R_BRACKETS (291) 14 15 43 44 45 66
L_BRACE (292) 16 17 29 30 46 47
R_BRACE (293) 16 17 29 30 46 47
ID (294) 105
INTEGER (295) 104
STRING (296) 102
CHARACTER (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
CompUnit (45)
    on left: 2 3 4 5, on right: 1 2 3
Decl (46)
    on left: 6 7, on right: 2 4 48 50
ConstDecl (47)
    on left: 8, on right: 6
ConstDefList (48)
    on left: 9 10, on right: 8 9
BType (49)
    on left: 11, on right: 8 22 37 38 41 42
ConstDef (50)
    on left: 12 13, on right: 9 10
ConstSubscripts (51)
    on left: 14 15, on right: 13 14 27 28
ConstInitVal (52)
    on left: 16 17, on right: 13 18 20
ConstInitValList (53)
    on left: 18 19 20 21, on right: 16 18 19
VarDecl (54)
    on left: 22, on right: 7
VarDefList (55)
    on left: 23 24, on right: 22 23
VarDef (56)
    on left: 25 26 27 28, on right: 23 24
InitVal (57)
    on left: 29 30, on right: 28 32 34
InitValList (58)
    on left: 31 32 33 34, on right: 29 31 32
FuncDef (59)
    on left: 35 36 37 38, on right: 3 5
FuncFParams (60)
    on left: 39 40, on right: 35 37 39
FuncFParam (61)
    on left: 41 42, on right: 39 40
ExpSubscripts (62)
    on left: 43 44 45, on right: 42 43
Block (63)
    on left: 46 47, on right: 35 36 37 38 55
BlockItem (64)
    on left: 48 49 50 51, on right: 46 48 49
Stmt (65)
    on left: 52 53 54 55 56 57 58 59 60 61 62, on right: 49 51 56 57
    58
FuncRParams (66)
    on left: 63 64, on right: 63 96
LVal (67)
    on left: 65 66, on right: 52 66 100
Cond (68)
    on left: 67, on right: 56 57 58
LOrExp (69)
    on left: 68 69, on right: 67 69
LAndExp (70)
    on left: 70 71, on right: 68 69 71
EqExp (71)
    on left: 72 73, on right: 70 71 73
RelExp (72)
    on left: 74 75, on right: 72 73 75
RelOp (73)
    on left: 76 77 78 79, on right: 75
EqOp (74)
    on left: 80 81, on right: 73
addOp (75)
    on left: 82 83, on right: 92
mulOp (76)
    on left: 84 85 86, on right: 94
UnaryOp (77)
    on left: 87 88 89, on right: 98
Exp (78)
    on left: 90, on right: 26 31 33 43 45 52 53 61 63 64 66 99
AddExp (79)
    on left: 91 92, on right: 74 75 90 92 103
MulExp (80)
    on left: 93 94, on right: 91 92 94
UnaryExp (81)
    on left: 95 96 97 98, on right: 93 94 98
PrimaryExp (82)
    on left: 99 100 101 102, on right: 95
ConstExp (83)
    on left: 103, on right: 12 14 15 19 21
Number (84)
    on left: 104, on right: 101
Ident (85)
    on left: 105, on right: 12 13 25 26 27 28 35 36 37 38 41 42 65
    96 97


state 0

    0 $accept: . program $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    program    go to state 4
    CompUnit   go to state 5
    Decl       go to state 6
    ConstDecl  go to state 7
    BType      go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 10


state 1

    8 ConstDecl: CONST . BType ConstDefList SEMICOLON

    INT  shift, and go to state 2

    BType  go to state 11


state 2

   11 BType: INT .

    $default  reduce using rule 11 (BType)


state 3

   35 FuncDef: VOID . Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   36        | VOID . Ident L_PARENTHESIS R_PARENTHESIS Block

    ID  shift, and go to state 12

    Ident  go to state 13


state 4

    0 $accept: program . $end

    $end  shift, and go to state 14


state 5

    1 program: CompUnit .
    2 CompUnit: CompUnit . Decl
    3         | CompUnit . FuncDef

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (program)

    Decl       go to state 15
    ConstDecl  go to state 7
    BType      go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 16


state 6

    4 CompUnit: Decl .

    $default  reduce using rule 4 (CompUnit)


state 7

    6 Decl: ConstDecl .

    $default  reduce using rule 6 (Decl)


state 8

   22 VarDecl: BType . VarDefList SEMICOLON
   37 FuncDef: BType . Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   38        | BType . Ident L_PARENTHESIS R_PARENTHESIS Block

    ID  shift, and go to state 12

    VarDefList  go to state 17
    VarDef      go to state 18
    Ident       go to state 19


state 9

    7 Decl: VarDecl .

    $default  reduce using rule 7 (Decl)


state 10

    5 CompUnit: FuncDef .

    $default  reduce using rule 5 (CompUnit)


state 11

    8 ConstDecl: CONST BType . ConstDefList SEMICOLON

    ID  shift, and go to state 12

    ConstDefList  go to state 20
    ConstDef      go to state 21
    Ident         go to state 22


state 12

  105 Ident: ID .

    $default  reduce using rule 105 (Ident)


state 13

   35 FuncDef: VOID Ident . L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   36        | VOID Ident . L_PARENTHESIS R_PARENTHESIS Block

    L_PARENTHESIS  shift, and go to state 23


state 14

    0 $accept: program $end .

    $default  accept


state 15

    2 CompUnit: CompUnit Decl .

    $default  reduce using rule 2 (CompUnit)


state 16

    3 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 3 (CompUnit)


state 17

   22 VarDecl: BType VarDefList . SEMICOLON
   23 VarDefList: VarDefList . COMMA VarDef

    COMMA      shift, and go to state 24
    SEMICOLON  shift, and go to state 25


state 18

   24 VarDefList: VarDef .

    $default  reduce using rule 24 (VarDefList)


state 19

   25 VarDef: Ident .
   26       | Ident . ASSIGNMENT Exp
   27       | Ident . ConstSubscripts
   28       | Ident . ConstSubscripts ASSIGNMENT InitVal
   37 FuncDef: BType Ident . L_PARENTHESIS FuncFParams R_PARENTHESIS Block
   38        | BType Ident . L_PARENTHESIS R_PARENTHESIS Block

    ASSIGNMENT     shift, and go to state 26
    L_PARENTHESIS  shift, and go to state 27
    L_BRACKETS     shift, and go to state 28

    $default  reduce using rule 25 (VarDef)

    ConstSubscripts  go to state 29


state 20

    8 ConstDecl: CONST BType ConstDefList . SEMICOLON
    9 ConstDefList: ConstDefList . COMMA ConstDef

    COMMA      shift, and go to state 30
    SEMICOLON  shift, and go to state 31


state 21

   10 ConstDefList: ConstDef .

    $default  reduce using rule 10 (ConstDefList)


state 22

   12 ConstDef: Ident . ASSIGNMENT ConstExp
   13         | Ident . ConstSubscripts ASSIGNMENT ConstInitVal

    ASSIGNMENT  shift, and go to state 32
    L_BRACKETS  shift, and go to state 28

    ConstSubscripts  go to state 33


state 23

   35 FuncDef: VOID Ident L_PARENTHESIS . FuncFParams R_PARENTHESIS Block
   36        | VOID Ident L_PARENTHESIS . R_PARENTHESIS Block

    INT            shift, and go to state 2
    R_PARENTHESIS  shift, and go to state 34

    BType        go to state 35
    FuncFParams  go to state 36
    FuncFParam   go to state 37


state 24

   23 VarDefList: VarDefList COMMA . VarDef

    ID  shift, and go to state 12

    VarDef  go to state 38
    Ident   go to state 39


state 25

   22 VarDecl: BType VarDefList SEMICOLON .

    $default  reduce using rule 22 (VarDecl)


state 26

   26 VarDef: Ident ASSIGNMENT . Exp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 48
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 27

   37 FuncDef: BType Ident L_PARENTHESIS . FuncFParams R_PARENTHESIS Block
   38        | BType Ident L_PARENTHESIS . R_PARENTHESIS Block

    INT            shift, and go to state 2
    R_PARENTHESIS  shift, and go to state 55

    BType        go to state 35
    FuncFParams  go to state 56
    FuncFParam   go to state 37


state 28

   15 ConstSubscripts: L_BRACKETS . ConstExp R_BRACKETS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    AddExp      go to state 57
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    ConstExp    go to state 58
    Number      go to state 53
    Ident       go to state 54


state 29

   14 ConstSubscripts: ConstSubscripts . L_BRACKETS ConstExp R_BRACKETS
   27 VarDef: Ident ConstSubscripts .
   28       | Ident ConstSubscripts . ASSIGNMENT InitVal

    ASSIGNMENT  shift, and go to state 59
    L_BRACKETS  shift, and go to state 60

    $default  reduce using rule 27 (VarDef)


state 30

    9 ConstDefList: ConstDefList COMMA . ConstDef

    ID  shift, and go to state 12

    ConstDef  go to state 61
    Ident     go to state 22


state 31

    8 ConstDecl: CONST BType ConstDefList SEMICOLON .

    $default  reduce using rule 8 (ConstDecl)


state 32

   12 ConstDef: Ident ASSIGNMENT . ConstExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    AddExp      go to state 57
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    ConstExp    go to state 62
    Number      go to state 53
    Ident       go to state 54


state 33

   13 ConstDef: Ident ConstSubscripts . ASSIGNMENT ConstInitVal
   14 ConstSubscripts: ConstSubscripts . L_BRACKETS ConstExp R_BRACKETS

    ASSIGNMENT  shift, and go to state 63
    L_BRACKETS  shift, and go to state 60


state 34

   36 FuncDef: VOID Ident L_PARENTHESIS R_PARENTHESIS . Block

    L_BRACE  shift, and go to state 64

    Block  go to state 65


state 35

   41 FuncFParam: BType . Ident
   42           | BType . Ident ExpSubscripts

    ID  shift, and go to state 12

    Ident  go to state 66


state 36

   35 FuncDef: VOID Ident L_PARENTHESIS FuncFParams . R_PARENTHESIS Block
   39 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA          shift, and go to state 67
    R_PARENTHESIS  shift, and go to state 68


state 37

   40 FuncFParams: FuncFParam .

    $default  reduce using rule 40 (FuncFParams)


state 38

   23 VarDefList: VarDefList COMMA VarDef .

    $default  reduce using rule 23 (VarDefList)


state 39

   25 VarDef: Ident .
   26       | Ident . ASSIGNMENT Exp
   27       | Ident . ConstSubscripts
   28       | Ident . ConstSubscripts ASSIGNMENT InitVal

    ASSIGNMENT  shift, and go to state 26
    L_BRACKETS  shift, and go to state 28

    $default  reduce using rule 25 (VarDef)

    ConstSubscripts  go to state 29


state 40

   87 UnaryOp: ADD .

    $default  reduce using rule 87 (UnaryOp)


state 41

   88 UnaryOp: SUB .

    $default  reduce using rule 88 (UnaryOp)


state 42

   89 UnaryOp: NOT .

    $default  reduce using rule 89 (UnaryOp)


state 43

   99 PrimaryExp: L_PARENTHESIS . Exp R_PARENTHESIS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 69
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 44

  104 Number: INTEGER .

    $default  reduce using rule 104 (Number)


state 45

  102 PrimaryExp: STRING .

    $default  reduce using rule 102 (PrimaryExp)


state 46

   66 LVal: LVal . L_BRACKETS Exp R_BRACKETS
  100 PrimaryExp: LVal .

    L_BRACKETS  shift, and go to state 70

    $default  reduce using rule 100 (PrimaryExp)


state 47

   98 UnaryExp: UnaryOp . UnaryExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    UnaryExp    go to state 71
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 48

   26 VarDef: Ident ASSIGNMENT Exp .

    $default  reduce using rule 26 (VarDef)


state 49

   90 Exp: AddExp .
   92 AddExp: AddExp . addOp MulExp

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 90 (Exp)

    addOp  go to state 74


state 50

   91 AddExp: MulExp .
   94 MulExp: MulExp . mulOp UnaryExp

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 91 (AddExp)

    mulOp  go to state 78


state 51

   93 MulExp: UnaryExp .

    $default  reduce using rule 93 (MulExp)


state 52

   95 UnaryExp: PrimaryExp .

    $default  reduce using rule 95 (UnaryExp)


state 53

  101 PrimaryExp: Number .

    $default  reduce using rule 101 (PrimaryExp)


state 54

   65 LVal: Ident .
   96 UnaryExp: Ident . L_PARENTHESIS FuncRParams R_PARENTHESIS
   97         | Ident . L_PARENTHESIS R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 79

    $default  reduce using rule 65 (LVal)


state 55

   38 FuncDef: BType Ident L_PARENTHESIS R_PARENTHESIS . Block

    L_BRACE  shift, and go to state 64

    Block  go to state 80


state 56

   37 FuncDef: BType Ident L_PARENTHESIS FuncFParams . R_PARENTHESIS Block
   39 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA          shift, and go to state 67
    R_PARENTHESIS  shift, and go to state 81


state 57

   92 AddExp: AddExp . addOp MulExp
  103 ConstExp: AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 103 (ConstExp)

    addOp  go to state 74


state 58

   15 ConstSubscripts: L_BRACKETS ConstExp . R_BRACKETS

    R_BRACKETS  shift, and go to state 82


state 59

   28 VarDef: Ident ConstSubscripts ASSIGNMENT . InitVal

    L_BRACE  shift, and go to state 83

    InitVal  go to state 84


state 60

   14 ConstSubscripts: ConstSubscripts L_BRACKETS . ConstExp R_BRACKETS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    AddExp      go to state 57
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    ConstExp    go to state 85
    Number      go to state 53
    Ident       go to state 54


state 61

    9 ConstDefList: ConstDefList COMMA ConstDef .

    $default  reduce using rule 9 (ConstDefList)


state 62

   12 ConstDef: Ident ASSIGNMENT ConstExp .

    $default  reduce using rule 12 (ConstDef)


state 63

   13 ConstDef: Ident ConstSubscripts ASSIGNMENT . ConstInitVal

    L_BRACE  shift, and go to state 86

    ConstInitVal  go to state 87


state 64

   46 Block: L_BRACE . BlockItem R_BRACE
   47      | L_BRACE . R_BRACE

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    CONST          shift, and go to state 1
    INT            shift, and go to state 2
    IF             shift, and go to state 88
    WHILE          shift, and go to state 89
    RETURN         shift, and go to state 90
    BREAK          shift, and go to state 91
    CONTINUE       shift, and go to state 92
    SEMICOLON      shift, and go to state 93
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 64
    R_BRACE        shift, and go to state 94
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    Decl        go to state 95
    ConstDecl   go to state 7
    BType       go to state 96
    VarDecl     go to state 9
    Block       go to state 97
    BlockItem   go to state 98
    Stmt        go to state 99
    LVal        go to state 100
    UnaryOp     go to state 47
    Exp         go to state 101
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 65

   36 FuncDef: VOID Ident L_PARENTHESIS R_PARENTHESIS Block .

    $default  reduce using rule 36 (FuncDef)


state 66

   41 FuncFParam: BType Ident .
   42           | BType Ident . ExpSubscripts

    L_BRACKETS  shift, and go to state 102

    $default  reduce using rule 41 (FuncFParam)

    ExpSubscripts  go to state 103


state 67

   39 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 2

    BType       go to state 35
    FuncFParam  go to state 104


state 68

   35 FuncDef: VOID Ident L_PARENTHESIS FuncFParams R_PARENTHESIS . Block

    L_BRACE  shift, and go to state 64

    Block  go to state 105


state 69

   99 PrimaryExp: L_PARENTHESIS Exp . R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 106


state 70

   66 LVal: LVal L_BRACKETS . Exp R_BRACKETS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 107
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 71

   98 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 98 (UnaryExp)


state 72

   82 addOp: ADD .

    $default  reduce using rule 82 (addOp)


state 73

   83 addOp: SUB .

    $default  reduce using rule 83 (addOp)


state 74

   92 AddExp: AddExp addOp . MulExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    MulExp      go to state 108
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 75

   84 mulOp: MUL .

    $default  reduce using rule 84 (mulOp)


state 76

   85 mulOp: DIV .

    $default  reduce using rule 85 (mulOp)


state 77

   86 mulOp: MOD .

    $default  reduce using rule 86 (mulOp)


state 78

   94 MulExp: MulExp mulOp . UnaryExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    UnaryExp    go to state 109
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 79

   96 UnaryExp: Ident L_PARENTHESIS . FuncRParams R_PARENTHESIS
   97         | Ident L_PARENTHESIS . R_PARENTHESIS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    R_PARENTHESIS  shift, and go to state 110
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    FuncRParams  go to state 111
    LVal         go to state 46
    UnaryOp      go to state 47
    Exp          go to state 112
    AddExp       go to state 49
    MulExp       go to state 50
    UnaryExp     go to state 51
    PrimaryExp   go to state 52
    Number       go to state 53
    Ident        go to state 54


state 80

   38 FuncDef: BType Ident L_PARENTHESIS R_PARENTHESIS Block .

    $default  reduce using rule 38 (FuncDef)


state 81

   37 FuncDef: BType Ident L_PARENTHESIS FuncFParams R_PARENTHESIS . Block

    L_BRACE  shift, and go to state 64

    Block  go to state 113


state 82

   15 ConstSubscripts: L_BRACKETS ConstExp R_BRACKETS .

    $default  reduce using rule 15 (ConstSubscripts)


state 83

   29 InitVal: L_BRACE . InitValList R_BRACE
   30        | L_BRACE . R_BRACE

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 83
    R_BRACE        shift, and go to state 114
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    InitVal      go to state 115
    InitValList  go to state 116
    LVal         go to state 46
    UnaryOp      go to state 47
    Exp          go to state 117
    AddExp       go to state 49
    MulExp       go to state 50
    UnaryExp     go to state 51
    PrimaryExp   go to state 52
    Number       go to state 53
    Ident        go to state 54


state 84

   28 VarDef: Ident ConstSubscripts ASSIGNMENT InitVal .

    $default  reduce using rule 28 (VarDef)


state 85

   14 ConstSubscripts: ConstSubscripts L_BRACKETS ConstExp . R_BRACKETS

    R_BRACKETS  shift, and go to state 118


state 86

   16 ConstInitVal: L_BRACE . ConstInitValList R_BRACE
   17             | L_BRACE . R_BRACE

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 86
    R_BRACE        shift, and go to state 119
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    ConstInitVal      go to state 120
    ConstInitValList  go to state 121
    LVal              go to state 46
    UnaryOp           go to state 47
    AddExp            go to state 57
    MulExp            go to state 50
    UnaryExp          go to state 51
    PrimaryExp        go to state 52
    ConstExp          go to state 122
    Number            go to state 53
    Ident             go to state 54


state 87

   13 ConstDef: Ident ConstSubscripts ASSIGNMENT ConstInitVal .

    $default  reduce using rule 13 (ConstDef)


state 88

   56 Stmt: IF . L_PARENTHESIS Cond R_PARENTHESIS Stmt
   57     | IF . L_PARENTHESIS Cond R_PARENTHESIS Stmt ELSE Stmt

    L_PARENTHESIS  shift, and go to state 123


state 89

   58 Stmt: WHILE . L_PARENTHESIS Cond R_PARENTHESIS Stmt

    L_PARENTHESIS  shift, and go to state 124


state 90

   61 Stmt: RETURN . Exp SEMICOLON
   62     | RETURN . SEMICOLON

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    SEMICOLON      shift, and go to state 125
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 126
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 91

   59 Stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 127


state 92

   60 Stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 128


state 93

   54 Stmt: SEMICOLON .

    $default  reduce using rule 54 (Stmt)


state 94

   47 Block: L_BRACE R_BRACE .

    $default  reduce using rule 47 (Block)


state 95

   50 BlockItem: Decl .

    $default  reduce using rule 50 (BlockItem)


state 96

   22 VarDecl: BType . VarDefList SEMICOLON

    ID  shift, and go to state 12

    VarDefList  go to state 17
    VarDef      go to state 18
    Ident       go to state 39


state 97

   55 Stmt: Block .

    $default  reduce using rule 55 (Stmt)


state 98

   46 Block: L_BRACE BlockItem . R_BRACE
   48 BlockItem: BlockItem . Decl
   49          | BlockItem . Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    CONST          shift, and go to state 1
    INT            shift, and go to state 2
    IF             shift, and go to state 88
    WHILE          shift, and go to state 89
    RETURN         shift, and go to state 90
    BREAK          shift, and go to state 91
    CONTINUE       shift, and go to state 92
    SEMICOLON      shift, and go to state 93
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 64
    R_BRACE        shift, and go to state 129
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    Decl        go to state 130
    ConstDecl   go to state 7
    BType       go to state 96
    VarDecl     go to state 9
    Block       go to state 97
    Stmt        go to state 131
    LVal        go to state 100
    UnaryOp     go to state 47
    Exp         go to state 101
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 99

   51 BlockItem: Stmt .

    $default  reduce using rule 51 (BlockItem)


state 100

   52 Stmt: LVal . ASSIGNMENT Exp SEMICOLON
   66 LVal: LVal . L_BRACKETS Exp R_BRACKETS
  100 PrimaryExp: LVal .

    ASSIGNMENT  shift, and go to state 132
    L_BRACKETS  shift, and go to state 70

    $default  reduce using rule 100 (PrimaryExp)


state 101

   53 Stmt: Exp . SEMICOLON

    SEMICOLON  shift, and go to state 133


state 102

   44 ExpSubscripts: L_BRACKETS . R_BRACKETS
   45              | L_BRACKETS . Exp R_BRACKETS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    R_BRACKETS     shift, and go to state 134
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 135
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 103

   42 FuncFParam: BType Ident ExpSubscripts .
   43 ExpSubscripts: ExpSubscripts . L_BRACKETS Exp R_BRACKETS

    L_BRACKETS  shift, and go to state 136

    $default  reduce using rule 42 (FuncFParam)


state 104

   39 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 39 (FuncFParams)


state 105

   35 FuncDef: VOID Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block .

    $default  reduce using rule 35 (FuncDef)


state 106

   99 PrimaryExp: L_PARENTHESIS Exp R_PARENTHESIS .

    $default  reduce using rule 99 (PrimaryExp)


state 107

   66 LVal: LVal L_BRACKETS Exp . R_BRACKETS

    R_BRACKETS  shift, and go to state 137


state 108

   92 AddExp: AddExp addOp MulExp .
   94 MulExp: MulExp . mulOp UnaryExp

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 92 (AddExp)

    mulOp  go to state 78


state 109

   94 MulExp: MulExp mulOp UnaryExp .

    $default  reduce using rule 94 (MulExp)


state 110

   97 UnaryExp: Ident L_PARENTHESIS R_PARENTHESIS .

    $default  reduce using rule 97 (UnaryExp)


state 111

   63 FuncRParams: FuncRParams . COMMA Exp
   96 UnaryExp: Ident L_PARENTHESIS FuncRParams . R_PARENTHESIS

    COMMA          shift, and go to state 138
    R_PARENTHESIS  shift, and go to state 139


state 112

   64 FuncRParams: Exp .

    $default  reduce using rule 64 (FuncRParams)


state 113

   37 FuncDef: BType Ident L_PARENTHESIS FuncFParams R_PARENTHESIS Block .

    $default  reduce using rule 37 (FuncDef)


state 114

   30 InitVal: L_BRACE R_BRACE .

    $default  reduce using rule 30 (InitVal)


state 115

   34 InitValList: InitVal .

    $default  reduce using rule 34 (InitValList)


state 116

   29 InitVal: L_BRACE InitValList . R_BRACE
   31 InitValList: InitValList . COMMA Exp
   32            | InitValList . COMMA InitVal

    COMMA    shift, and go to state 140
    R_BRACE  shift, and go to state 141


state 117

   33 InitValList: Exp .

    $default  reduce using rule 33 (InitValList)


state 118

   14 ConstSubscripts: ConstSubscripts L_BRACKETS ConstExp R_BRACKETS .

    $default  reduce using rule 14 (ConstSubscripts)


state 119

   17 ConstInitVal: L_BRACE R_BRACE .

    $default  reduce using rule 17 (ConstInitVal)


state 120

   20 ConstInitValList: ConstInitVal .

    $default  reduce using rule 20 (ConstInitValList)


state 121

   16 ConstInitVal: L_BRACE ConstInitValList . R_BRACE
   18 ConstInitValList: ConstInitValList . COMMA ConstInitVal
   19                 | ConstInitValList . COMMA ConstExp

    COMMA    shift, and go to state 142
    R_BRACE  shift, and go to state 143


state 122

   21 ConstInitValList: ConstExp .

    $default  reduce using rule 21 (ConstInitValList)


state 123

   56 Stmt: IF L_PARENTHESIS . Cond R_PARENTHESIS Stmt
   57     | IF L_PARENTHESIS . Cond R_PARENTHESIS Stmt ELSE Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    Cond        go to state 144
    LOrExp      go to state 145
    LAndExp     go to state 146
    EqExp       go to state 147
    RelExp      go to state 148
    UnaryOp     go to state 47
    AddExp      go to state 149
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 124

   58 Stmt: WHILE L_PARENTHESIS . Cond R_PARENTHESIS Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    Cond        go to state 150
    LOrExp      go to state 145
    LAndExp     go to state 146
    EqExp       go to state 147
    RelExp      go to state 148
    UnaryOp     go to state 47
    AddExp      go to state 149
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 125

   62 Stmt: RETURN SEMICOLON .

    $default  reduce using rule 62 (Stmt)


state 126

   61 Stmt: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 127

   59 Stmt: BREAK SEMICOLON .

    $default  reduce using rule 59 (Stmt)


state 128

   60 Stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 60 (Stmt)


state 129

   46 Block: L_BRACE BlockItem R_BRACE .

    $default  reduce using rule 46 (Block)


state 130

   48 BlockItem: BlockItem Decl .

    $default  reduce using rule 48 (BlockItem)


state 131

   49 BlockItem: BlockItem Stmt .

    $default  reduce using rule 49 (BlockItem)


state 132

   52 Stmt: LVal ASSIGNMENT . Exp SEMICOLON

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 152
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 133

   53 Stmt: Exp SEMICOLON .

    $default  reduce using rule 53 (Stmt)


state 134

   44 ExpSubscripts: L_BRACKETS R_BRACKETS .

    $default  reduce using rule 44 (ExpSubscripts)


state 135

   45 ExpSubscripts: L_BRACKETS Exp . R_BRACKETS

    R_BRACKETS  shift, and go to state 153


state 136

   43 ExpSubscripts: ExpSubscripts L_BRACKETS . Exp R_BRACKETS

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 154
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 137

   66 LVal: LVal L_BRACKETS Exp R_BRACKETS .

    $default  reduce using rule 66 (LVal)


state 138

   63 FuncRParams: FuncRParams COMMA . Exp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 155
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 139

   96 UnaryExp: Ident L_PARENTHESIS FuncRParams R_PARENTHESIS .

    $default  reduce using rule 96 (UnaryExp)


state 140

   31 InitValList: InitValList COMMA . Exp
   32            | InitValList COMMA . InitVal

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 83
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    InitVal     go to state 156
    LVal        go to state 46
    UnaryOp     go to state 47
    Exp         go to state 157
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 141

   29 InitVal: L_BRACE InitValList R_BRACE .

    $default  reduce using rule 29 (InitVal)


state 142

   18 ConstInitValList: ConstInitValList COMMA . ConstInitVal
   19                 | ConstInitValList COMMA . ConstExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 86
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    ConstInitVal  go to state 158
    LVal          go to state 46
    UnaryOp       go to state 47
    AddExp        go to state 57
    MulExp        go to state 50
    UnaryExp      go to state 51
    PrimaryExp    go to state 52
    ConstExp      go to state 159
    Number        go to state 53
    Ident         go to state 54


state 143

   16 ConstInitVal: L_BRACE ConstInitValList R_BRACE .

    $default  reduce using rule 16 (ConstInitVal)


state 144

   56 Stmt: IF L_PARENTHESIS Cond . R_PARENTHESIS Stmt
   57     | IF L_PARENTHESIS Cond . R_PARENTHESIS Stmt ELSE Stmt

    R_PARENTHESIS  shift, and go to state 160


state 145

   67 Cond: LOrExp .
   69 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 161

    $default  reduce using rule 67 (Cond)


state 146

   68 LOrExp: LAndExp .
   71 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 162

    $default  reduce using rule 68 (LOrExp)


state 147

   70 LAndExp: EqExp .
   73 EqExp: EqExp . EqOp RelExp

    EQ  shift, and go to state 163
    NE  shift, and go to state 164

    $default  reduce using rule 70 (LAndExp)

    EqOp  go to state 165


state 148

   72 EqExp: RelExp .
   75 RelExp: RelExp . RelOp AddExp

    LT  shift, and go to state 166
    LE  shift, and go to state 167
    GT  shift, and go to state 168
    GE  shift, and go to state 169

    $default  reduce using rule 72 (EqExp)

    RelOp  go to state 170


state 149

   74 RelExp: AddExp .
   92 AddExp: AddExp . addOp MulExp

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 74 (RelExp)

    addOp  go to state 74


state 150

   58 Stmt: WHILE L_PARENTHESIS Cond . R_PARENTHESIS Stmt

    R_PARENTHESIS  shift, and go to state 171


state 151

   61 Stmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 61 (Stmt)


state 152

   52 Stmt: LVal ASSIGNMENT Exp . SEMICOLON

    SEMICOLON  shift, and go to state 172


state 153

   45 ExpSubscripts: L_BRACKETS Exp R_BRACKETS .

    $default  reduce using rule 45 (ExpSubscripts)


state 154

   43 ExpSubscripts: ExpSubscripts L_BRACKETS Exp . R_BRACKETS

    R_BRACKETS  shift, and go to state 173


state 155

   63 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 63 (FuncRParams)


state 156

   32 InitValList: InitValList COMMA InitVal .

    $default  reduce using rule 32 (InitValList)


state 157

   31 InitValList: InitValList COMMA Exp .

    $default  reduce using rule 31 (InitValList)


state 158

   18 ConstInitValList: ConstInitValList COMMA ConstInitVal .

    $default  reduce using rule 18 (ConstInitValList)


state 159

   19 ConstInitValList: ConstInitValList COMMA ConstExp .

    $default  reduce using rule 19 (ConstInitValList)


state 160

   56 Stmt: IF L_PARENTHESIS Cond R_PARENTHESIS . Stmt
   57     | IF L_PARENTHESIS Cond R_PARENTHESIS . Stmt ELSE Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    IF             shift, and go to state 88
    WHILE          shift, and go to state 89
    RETURN         shift, and go to state 90
    BREAK          shift, and go to state 91
    CONTINUE       shift, and go to state 92
    SEMICOLON      shift, and go to state 93
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 64
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    Block       go to state 97
    Stmt        go to state 174
    LVal        go to state 100
    UnaryOp     go to state 47
    Exp         go to state 101
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 161

   69 LOrExp: LOrExp OR . LAndExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    LAndExp     go to state 175
    EqExp       go to state 147
    RelExp      go to state 148
    UnaryOp     go to state 47
    AddExp      go to state 149
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 162

   71 LAndExp: LAndExp AND . EqExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    EqExp       go to state 176
    RelExp      go to state 148
    UnaryOp     go to state 47
    AddExp      go to state 149
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 163

   80 EqOp: EQ .

    $default  reduce using rule 80 (EqOp)


state 164

   81 EqOp: NE .

    $default  reduce using rule 81 (EqOp)


state 165

   73 EqExp: EqExp EqOp . RelExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    RelExp      go to state 177
    UnaryOp     go to state 47
    AddExp      go to state 149
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 166

   76 RelOp: LT .

    $default  reduce using rule 76 (RelOp)


state 167

   77 RelOp: LE .

    $default  reduce using rule 77 (RelOp)


state 168

   78 RelOp: GT .

    $default  reduce using rule 78 (RelOp)


state 169

   79 RelOp: GE .

    $default  reduce using rule 79 (RelOp)


state 170

   75 RelExp: RelExp RelOp . AddExp

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    L_PARENTHESIS  shift, and go to state 43
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    LVal        go to state 46
    UnaryOp     go to state 47
    AddExp      go to state 178
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 171

   58 Stmt: WHILE L_PARENTHESIS Cond R_PARENTHESIS . Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    IF             shift, and go to state 88
    WHILE          shift, and go to state 89
    RETURN         shift, and go to state 90
    BREAK          shift, and go to state 91
    CONTINUE       shift, and go to state 92
    SEMICOLON      shift, and go to state 93
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 64
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    Block       go to state 97
    Stmt        go to state 179
    LVal        go to state 100
    UnaryOp     go to state 47
    Exp         go to state 101
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 172

   52 Stmt: LVal ASSIGNMENT Exp SEMICOLON .

    $default  reduce using rule 52 (Stmt)


state 173

   43 ExpSubscripts: ExpSubscripts L_BRACKETS Exp R_BRACKETS .

    $default  reduce using rule 43 (ExpSubscripts)


state 174

   56 Stmt: IF L_PARENTHESIS Cond R_PARENTHESIS Stmt .
   57     | IF L_PARENTHESIS Cond R_PARENTHESIS Stmt . ELSE Stmt

    ELSE  shift, and go to state 180

    ELSE      [reduce using rule 56 (Stmt)]
    $default  reduce using rule 56 (Stmt)


state 175

   69 LOrExp: LOrExp OR LAndExp .
   71 LAndExp: LAndExp . AND EqExp

    AND  shift, and go to state 162

    $default  reduce using rule 69 (LOrExp)


state 176

   71 LAndExp: LAndExp AND EqExp .
   73 EqExp: EqExp . EqOp RelExp

    EQ  shift, and go to state 163
    NE  shift, and go to state 164

    $default  reduce using rule 71 (LAndExp)

    EqOp  go to state 165


state 177

   73 EqExp: EqExp EqOp RelExp .
   75 RelExp: RelExp . RelOp AddExp

    LT  shift, and go to state 166
    LE  shift, and go to state 167
    GT  shift, and go to state 168
    GE  shift, and go to state 169

    $default  reduce using rule 73 (EqExp)

    RelOp  go to state 170


state 178

   75 RelExp: RelExp RelOp AddExp .
   92 AddExp: AddExp . addOp MulExp

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 75 (RelExp)

    addOp  go to state 74


state 179

   58 Stmt: WHILE L_PARENTHESIS Cond R_PARENTHESIS Stmt .

    $default  reduce using rule 58 (Stmt)


state 180

   57 Stmt: IF L_PARENTHESIS Cond R_PARENTHESIS Stmt ELSE . Stmt

    ADD            shift, and go to state 40
    SUB            shift, and go to state 41
    NOT            shift, and go to state 42
    IF             shift, and go to state 88
    WHILE          shift, and go to state 89
    RETURN         shift, and go to state 90
    BREAK          shift, and go to state 91
    CONTINUE       shift, and go to state 92
    SEMICOLON      shift, and go to state 93
    L_PARENTHESIS  shift, and go to state 43
    L_BRACE        shift, and go to state 64
    ID             shift, and go to state 12
    INTEGER        shift, and go to state 44
    STRING         shift, and go to state 45

    Block       go to state 97
    Stmt        go to state 181
    LVal        go to state 100
    UnaryOp     go to state 47
    Exp         go to state 101
    AddExp      go to state 49
    MulExp      go to state 50
    UnaryExp    go to state 51
    PrimaryExp  go to state 52
    Number      go to state 53
    Ident       go to state 54


state 181

   57 Stmt: IF L_PARENTHESIS Cond R_PARENTHESIS Stmt ELSE Stmt .

    $default  reduce using rule 57 (Stmt)
